{\rtf1\ansi\ansicpg1251\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset204 Calibri;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil Calibri;}}
{\colortbl ;\red255\green255\blue0;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\highlight1\b\i\f0\fs22\lang1049\'ce\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'ea\'eb\'e0\'f1\'f1\'e0: \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2, \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e9, \'ef\'f0\'e8\'ec\'e5\'f0\'fb.\highlight0\par
\highlight1\'d1\'ee\'e1\'fb\'f2\'e8\'ff: \'ef\'ee\'ed\'ff\'f2\'e8\'e5, \'ef\'f0\'e8\'ec\'e5\'f0\'fb.\highlight0\par
\'d0\'e0\'e7\'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'ef\'f0\'e8\'eb\'ee\'e6\'e5\'ed\'e8\'e5\'ec \'f1 \'f4\'f3\'ed\'ea\'f6\'e8\'e5\'e9 \'ef\'ee\'e8\'f1\'ea\'e0 \'ef\'ee \'ec\'e0\'f0\'ea\'e5 \'e0\'e2\'f2\'ee\'ec\'ee\'e1\'e8\'eb\'ff, \'ec\'e0\'f0\'ea\'e5 \'e1\'e5\'ed\'e7\'e8\'ed\'e0, \'ec\'ee\'f9\'ed\'ee\'f1\'f2\'e8 \'e4\'e2\'e8\'e3\'e0\'f2\'e5\'eb\'ff, \'f4\'e0\'ec\'e8\'eb\'e8\'e8 \'e2\'eb\'e0\'e4\'e5\'eb\'fc\'f6\'e0 \'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'e5\'e9 \'f1\'ee\'f0\'f2\'e8\'f0\'ee\'e2\'ea\'e5 \'ef\'ee \'f4\'e0\'ec\'e8\'eb\'e8\'e8 \'e2\'eb\'e0\'e4\'e5\'eb\'fc\'f6\'e0. \'cf\'ee\'eb\'ff \'f2\'e0\'e1\'eb\'e8\'f6\'fb \f1\lang1033\'ab\f0\lang1049\'c0\'e2\'f2\'ee\'ec\'ee\'e1\'e8\'eb\'fc\f1\lang1033\'bb: \f0\lang1049\'f4\'e0\'ec\'e8\'eb\'e8\'ff \'e2\'eb\'e0\'e4\'e5\'eb\'fc\'f6\'e0, \'ea\'ee\'e4 \'ec\'e0\'f0\'ea\'e8 \'e0\'e2\'f2\'ee\'ec\'ee\'e1\'e8\'eb\'ff, \'f2\'f0\'e5\'e1\'f3\'e5\'ec\'e0\'ff \'ec\'e0\'f0\'ea\'e0 \'e1\'e5\'ed\'e7\'e8\'ed\'e0, \'ec\'ee\'f9\'ed\'ee\'f1\'f2\'fc \'e4\'e2\'e8\'e3\'e0\'f2\'e5\'eb\'ff, \'ee\'e1\'fa\'b8\'ec \'e1\'e0\'ea\'e0, \'ee\'f1\'f2\'e0\'f2\'ee\'ea \'e1\'e5\'ed\'e7\'e8\'ed\'e0, \'ee\'e1\'fa\'b8\'ec \'ec\'e0\'f1\'eb\'e0).\par
\par
\b0\i0\'c2 C# \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'fb \'ea\'eb\'e0\'f1\'f1\'e0 \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f2 \'e2\'e0\'ec \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e8\'f2\'fc, \'ea\'e0\'ea \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'e2\'e0\'f8\'e5\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0 \'e1\'f3\'e4\'f3\'f2 \'e2\'e5\'f1\'f2\'e8 \'f1\'e5\'e1\'ff \'ef\'f0\'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e8 \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'fb\'f5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2 \'ff\'e7\'fb\'ea\'e0, \'f2\'e0\'ea\'e8\'f5 \'ea\'e0\'ea +, -, ==, != \'e8 \'f2.\'e4. \'dd\'f2\'ee \'e4\'ee\'f1\'f2\'e8\'e3\'e0\'e5\'f2\'f1\'ff \'e4\'e2\'f3\'ec\'ff \'ec\'e5\'f5\'e0\'ed\'e8\'e7\'ec\'e0\'ec\'e8:\par
\'ce\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2: C# \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'ef\'f0\'e5\'e4\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'ed\'fb\'e9 \'ed\'e0\'e1\'ee\'f0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'e2\'fb \'ec\'ee\'e6\'e5\'f2\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'e2 \'f1\'e2\'ee\'e8\'f5 \'ea\'eb\'e0\'f1\'f1\'e0\'f5.\par
\'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2: \'c2\'fb \'ec\'ee\'e6\'e5\'f2\'e5 \'ef\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e8\'f2\'fc (\'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'e8\'f2\'fc) \'ef\'ee\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'fd\'f2\'e8\'f5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2 \'e4\'eb\'ff \'e2\'e0\'f8\'e8\'f5 \'f1\'ee\'e1\'f1\'f2\'e2\'e5\'ed\'ed\'fb\'f5 \'ea\'eb\'e0\'f1\'f1\'ee\'e2, \'f7\'f2\'ee \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\'ec \'e2\'e0\'f8\'e5\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0 \'e2\'e5\'f1\'f2\'e8 \'f1\'e5\'e1\'ff \'f2\'e0\'ea, \'ea\'e0\'ea \'e2\'fb \'f5\'ee\'f2\'e8\'f2\'e5, \'ef\'f0\'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e8 \'fd\'f2\'e8\'f5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2.\par
\b\'ce\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2\b0\par
\'c2 C# \'e5\'f1\'f2\'fc \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'ea\'e0\'f2\'e5\'e3\'ee\'f0\'e8\'e9 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'e2\'fb \'ec\'ee\'e6\'e5\'f2\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'e2 \'ea\'eb\'e0\'f1\'f1\'e0\'f5:\par
\'d3\'ed\'e0\'f0\'ed\'fb\'e5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'fb: \'e4\'e5\'e9\'f1\'f2\'e2\'f3\'fe\'f2 \'ed\'e0 \'ee\'e4\'e8\'ed \'ee\'ef\'e5\'f0\'e0\'ed\'e4 (\'ed\'e0\'ef\'f0\'e8\'ec\'e5\'f0, -, ++, --, !).\par
\'c1\'e8\'ed\'e0\'f0\'ed\'fb\'e5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'fb: \'e4\'e5\'e9\'f1\'f2\'e2\'f3\'fe\'f2 \'ed\'e0 \'e4\'e2\'e0 \'ee\'ef\'e5\'f0\'e0\'ed\'e4\'e0 (\'ed\'e0\'ef\'f0\'e8\'ec\'e5\'f0, +, -, *, /, ==, !=, <, >, <=, >=).\par
\'ce\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'fb \'ef\'f0\'e5\'ee\'e1\'f0\'e0\'e7\'ee\'e2\'e0\'ed\'e8\'ff: \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f2 \'ef\'f0\'e5\'ee\'e1\'f0\'e0\'e7\'ee\'e2\'fb\'e2\'e0\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'e2\'e0\'f8\'e5\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0 \'e2 \'e4\'f0\'f3\'e3\'e8\'e5 \'f2\'e8\'ef\'fb \'e8 \'ed\'e0\'ee\'e1\'ee\'f0\'ee\'f2.\par
\'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2\par
\'c4\'eb\'ff \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e8 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 \'e2 \'ea\'eb\'e0\'f1\'f1\'e5 \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ea\'eb\'fe\'f7\'e5\'e2\'ee\'e5 \'f1\'eb\'ee\'e2\'ee operator, \'e7\'e0 \'ea\'ee\'f2\'ee\'f0\'fb\'ec \'f1\'eb\'e5\'e4\'f3\'e5\'f2 \'f1\'e8\'ec\'e2\'ee\'eb \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e0\'e5\'ec\'ee\'e3\'ee \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0, \'e0 \'e7\'e0\'f2\'e5\'ec \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ee\'ed \'ef\'f0\'e8\'ed\'e8\'ec\'e0\'e5\'f2. \'ce\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'e4\'ee\'eb\'e6\'e5\'ed \'e1\'fb\'f2\'fc public \'e8 static.\par
\b\'d1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f1:\b0\par
public static <\'f2\'e8\'ef_\'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'ec\'ee\'e3\'ee_\'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff> operator <\'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0>(<\'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'fb>)\par
\{\par
    // \'cb\'ee\'e3\'e8\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0\par
    return <\'f0\'e5\'e7\'f3\'eb\'fc\'f2\'e0\'f2>;\par
\}\par
\b\'cf\'f0\'e0\'e2\'e8\'eb\'e0 \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e8:\b0\par
\'cd\'e5 \'e2\'f1\'e5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'fb \'ec\'ee\'e6\'ed\'ee \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'e8\'f2\'fc. \'cd\'e0\'ef\'f0\'e8\'ec\'e5\'f0, \'ed\'e5\'eb\'fc\'e7\'ff \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'e8\'f2\'fc \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'fb \'e4\'ee\'f1\'f2\'f3\'ef\'e0 \'ea \'f7\'eb\'e5\'ed\'f3 (.), \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff (=), && \'e8 || (\'eb\'ee\'e3\'e8\'f7\'e5\'f1\'ea\'ee\'e5 \'c8 \'e8 \'c8\'cb\'c8, \'ed\'ee \'ec\'ee\'e6\'ed\'ee \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'e8\'f2\'fc & \'e8 |), \'e0 \'f2\'e0\'ea\'e6\'e5 \'f1\'ee\'f1\'f2\'e0\'e2\'ed\'fb\'e5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'fb \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff (+=, -=, *=, \'e8 \'f2.\'e4.) \f2\emdash  \f0\'ee\'ed\'e8 \'e2\'fb\'f7\'e8\'f1\'eb\'ff\'fe\'f2\'f1\'ff \'ed\'e0 \'ee\'f1\'ed\'ee\'e2\'e5 \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e8 \'ee\'e1\'fb\'f7\'ed\'fb\'f5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2.\par
\'cf\'f0\'e8 \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e5 \'e1\'e8\'ed\'e0\'f0\'ed\'ee\'e3\'ee \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 \'ee\'e4\'e8\'ed \'e8\'e7 \'ee\'ef\'e5\'f0\'e0\'ed\'e4\'ee\'e2 \'e4\'ee\'eb\'e6\'e5\'ed \'e1\'fb\'f2\'fc \'f2\'e8\'ef\'ee\'ec \'e2\'e0\'f8\'e5\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0.\par
\'ce\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'fb \'f1\'f0\'e0\'e2\'ed\'e5\'ed\'e8\'ff (==, !=, <, >, <=, >=) \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e0\'fe\'f2\'f1\'ff \'ef\'ee\'ef\'e0\'f0\'ed\'ee. \'c5\'f1\'eb\'e8 \'e2\'fb \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'e8\'eb\'e8 ==, \'f2\'ee \'ed\'f3\'e6\'ed\'ee \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'e8\'f2\'fc \'e8 !=.\par
\'cf\'f0\'e8 \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e5 == \'e8\'eb\'e8 != \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'ee \'f2\'e0\'ea\'e6\'e5 \'ef\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e8\'f2\'fc \'ec\'e5\'f2\'ee\'e4\'fb Equals \'e8 GetHashCode.\par
\b\'cf\'f0\'e8\'ec\'e5\'f0\'fb\par
\'cf\'f0\'e8\'ec\'e5\'f0 1: \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 + \'e4\'eb\'ff \'ea\'eb\'e0\'f1\'f1\'e0 Vector2D (2D \'e2\'e5\'ea\'f2\'ee\'f0)\par
\b0 using System;\par
public class Vector2D\par
\{\par
    public double X \{ get; set; \}\par
    public double Y \{ get; set; \}\par
    public Vector2D(double x, double y)\par
    \{\par
        X = x;\par
        Y = y;\par
    \}\par
    // \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 +\par
    public static Vector2D operator +(Vector2D a, Vector2D b)\par
    \{\par
        return new Vector2D(a.X + b.X, a.Y + b.Y);\par
    \}\par
    // \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 - (\'ea\'e0\'ea \'ef\'f0\'e8\'ec\'e5\'f0)\par
     public static Vector2D operator -(Vector2D a, Vector2D b)\par
    \{\par
        return new Vector2D(a.X - b.X, a.Y - b.Y);\par
    \}\par
    public override string ToString()\par
    \{\par
        return $"(\{X\}, \{Y\})";\par
    \}\par
\}\par
public class Example\par
\{\par
    public static void Main(string[] args)\par
    \{\par
        Vector2D v1 = new Vector2D(1, 2);\par
        Vector2D v2 = new Vector2D(3, 4);\par
        Vector2D v3 = v1 + v2;  // \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e5\'ed\'ed\'fb\'e9 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 +\par
        Vector2D v4 = v1 - v2;  // \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e5\'ed\'ed\'fb\'e9 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 -\par
        Console.WriteLine($"v1: \{v1\}, v2: \{v2\}");\par
        Console.WriteLine($"v1 + v2 = \{v3\}");  // \'c2\'fb\'e2\'ee\'e4: v1 + v2 = (4, 6)\par
        Console.WriteLine($"v1 - v2 = \{v4\}");  // \'c2\'fb\'e2\'ee\'e4: v1 - v2 = (-2, -2)\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 2: \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2 == \'e8 != \'e4\'eb\'ff \'ea\'eb\'e0\'f1\'f1\'e0 Point (\'f2\'ee\'f7\'ea\'e0)\b0\par
using System;\par
public class Point\par
\{\par
    public int X \{ get; set; \}\par
    public int Y \{ get; set; \}\par
    public Point(int x, int y)\par
    \{\par
        X = x;\par
        Y = y;\par
    \f1\lang1033\}\f0\lang1049\par
    // \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 ==\par
    public static bool operator ==(Point a, Point b)\par
    \{\par
        if (ReferenceEquals(a, b)) return true; // \'cf\'f0\'ee\'e2\'e5\'f0\'ff\'e5\'ec \'ed\'e0 \'f0\'e0\'e2\'e5\'ed\'f1\'f2\'e2\'ee \'f1\'f1\'fb\'eb\'ee\'ea\par
        if (a is null || b is null) return false; // \'cf\'f0\'ee\'e2\'e5\'f0\'ea\'e0 \'ed\'e0 null\par
\par
        return a.X == b.X && a.Y == b.Y;\par
    \}\par
    // \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 !=\par
    public static bool operator !=(Point a, Point b)\par
    \{\par
        return !(a == b); // \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec \'f0\'e0\'ed\'e5\'e5 \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e5\'ed\'ed\'fb\'e9 ==\par
    \}\par
    // \'ce\'e1\'ff\'e7\'e0\'f2\'e5\'eb\'fc\'ed\'ee \'ef\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'e5\'ec Equals \'e8 GetHashCode \'ef\'f0\'e8 \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e5 == \'e8 !=\par
    public override bool Equals(object obj)\par
    \{\par
        if (obj == null || GetType() != obj.GetType())\par
        \{\par
            return false;\par
        \}\par
        var other = (Point)obj;\par
        return this == other; // \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec \'f0\'e0\'ed\'e5\'e5 \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e5\'ed\'ed\'fb\'e9 ==\par
    \}\par
    public override int GetHashCode()\par
    \{\par
        return X ^ Y;\par
    \}\par
     public override string ToString()\par
    \{\par
        return $"(\{X\}, \{Y\})";\par
    \}\par
\}\par
public class Example2\par
\{\par
    public static void Main(string[] args)\par
    \{\par
        Point p1 = new Point(1, 2);\par
        Point p2 = new Point(1, 2);\par
        Point p3 = new Point(3, 4);\par
        Console.WriteLine($"p1: \{p1\}, p2: \{p2\}, p3: \{p3\}");\par
        Console.WriteLine($"p1 == p2: \{p1 == p2\}"); // \'c2\'fb\'e2\'ee\'e4: p1 == p2: True\par
        Console.WriteLine($"p1 != p3: \{p1 != p3\}"); // \'c2\'fb\'e2\'ee\'e4: p1 != p3: True\par
        Console.WriteLine($"p1.Equals(p2): \{p1.Equals(p2)\}"); // \'c2\'fb\'e2\'ee\'e4: p1.Equals(p2): True\par
    \}\par
\}\par
\par
\'d1\'ee\'e1\'fb\'f2\'e8\'ff \'e2 C# \'ef\'f0\'e5\'e4\'f1\'f2\'e0\'e2\'eb\'ff\'fe\'f2 \'f1\'ee\'e1\'ee\'e9 \'ec\'e5\'f5\'e0\'ed\'e8\'e7\'ec, \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f9\'e8\'e9 \'ee\'e1\'fa\'e5\'ea\'f2\'f3 (\'ed\'e0\'e7\'fb\'e2\'e0\'e5\'ec\'ee\'ec\'f3 \'e8\'e7\'e4\'e0\'f2\'e5\'eb\'e5\'ec \'e8\'eb\'e8 \'e8\'f1\'f2\'ee\'f7\'ed\'e8\'ea\'ee\'ec) \'ee\'ef\'ee\'e2\'e5\'f9\'e0\'f2\'fc \'e4\'f0\'f3\'e3\'e8\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\'fb (\'ed\'e0\'e7\'fb\'e2\'e0\'e5\'ec\'fb\'e5 \'ef\'ee\'e4\'ef\'e8\'f1\'f7\'e8\'ea\'e0\'ec\'e8 \'e8\'eb\'e8 \'ef\'f0\'e8\'e5\'ec\'ed\'e8\'ea\'e0\'ec\'e8) \'ee \'ed\'e0\'f1\'f2\'f3\'ef\'eb\'e5\'ed\'e8\'e8 \'ea\'e0\'ea\'ee\'e3\'ee-\'eb\'e8\'e1\'ee \'f1\'ee\'e1\'fb\'f2\'e8\'ff. \'dd\'f2\'ee \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'f1\'ee\'e7\'e4\'e0\'e2\'e0\'f2\'fc \'f1\'eb\'e0\'e1\'ee \'f1\'e2\'ff\'e7\'e0\'ed\'ed\'fb\'e5 \'f1\'e8\'f1\'f2\'e5\'ec\'fb, \'e3\'e4\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'e2\'e7\'e0\'e8\'ec\'ee\'e4\'e5\'e9\'f1\'f2\'e2\'f3\'fe\'f2 \'e4\'f0\'f3\'e3 \'f1 \'e4\'f0\'f3\'e3\'ee\'ec, \'ed\'e5 \'e7\'ed\'e0\'ff \'ea\'ee\'ed\'ea\'f0\'e5\'f2\'ed\'ee, \'ea\'e0\'ea\'e8\'e5 \'e4\'f0\'f3\'e3\'e8\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'ee\'f2 \'ed\'e8\'f5 \'e7\'e0\'e2\'e8\'f1\'ff\'f2.\par
\b\'ce\'f1\'ed\'ee\'e2\'ed\'fb\'e5 \'ef\'ee\'ed\'ff\'f2\'e8\'ff\b0\par
\'c8\'e7\'e4\'e0\'f2\'e5\'eb\'fc (Publisher): \'ce\'e1\'fa\'e5\'ea\'f2, \'e3\'e5\'ed\'e5\'f0\'e8\'f0\'f3\'fe\'f9\'e8\'e9 \'f1\'ee\'e1\'fb\'f2\'e8\'e5. \'ce\'ed \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'e5\'f2 \'f1\'ee\'e1\'fb\'f2\'e8\'e5 \'e8 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2 \'e5\'e3\'ee, \'ea\'ee\'e3\'e4\'e0 \'ef\'f0\'ee\'e8\'f1\'f5\'ee\'e4\'e8\'f2 \'ed\'e5\'ea\'ee\'e5 \'e4\'e5\'e9\'f1\'f2\'e2\'e8\'e5.\par
\'d1\'ee\'e1\'fb\'f2\'e8\'e5 (Event): \'ce\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'e2 \'ea\'eb\'e0\'f1\'f1\'e5, \'ea\'ee\'f2\'ee\'f0\'ee\'e5 \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ef\'ee\'e4\'ef\'e8\'f1\'f7\'e8\'ea\'e0\'ec \'f0\'e5\'e3\'e8\'f1\'f2\'f0\'e8\'f0\'ee\'e2\'e0\'f2\'fc\'f1\'ff \'e4\'eb\'ff \'ef\'ee\'eb\'f3\'f7\'e5\'ed\'e8\'ff \'f3\'e2\'e5\'e4\'ee\'ec\'eb\'e5\'ed\'e8\'e9.\par
\'c4\'e5\'eb\'e5\'e3\'e0\'f2 (Delegate): \'d2\'e8\'ef, \'ef\'f0\'e5\'e4\'f1\'f2\'e0\'e2\'eb\'ff\'fe\'f9\'e8\'e9 \'f1\'f1\'fb\'eb\'ea\'f3 \'ed\'e0 \'ec\'e5\'f2\'ee\'e4. \'ce\'ed \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'e5\'f2 \'f1\'e8\'e3\'ed\'e0\'f2\'f3\'f0\'f3 \'ec\'e5\'f2\'ee\'e4\'ee\'e2, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ec\'ee\'e3\'f3\'f2 \'e1\'fb\'f2\'fc \'ef\'ee\'e4\'ef\'e8\'f1\'e0\'ed\'fb \'ed\'e0 \'f1\'ee\'e1\'fb\'f2\'e8\'e5.\par
\'cf\'ee\'e4\'ef\'e8\'f1\'f7\'e8\'ea (Subscriber): \'ce\'e1\'fa\'e5\'ea\'f2, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'f0\'e5\'e3\'e8\'f1\'f2\'f0\'e8\'f0\'f3\'e5\'f2\'f1\'ff \'ed\'e0 \'f1\'ee\'e1\'fb\'f2\'e8\'e5 \'e8 \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'ec\'e5\'f2\'ee\'e4-\'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'e7\'e2\'e0\'ed \'ef\'f0\'e8 \'e2\'ee\'e7\'ed\'e8\'ea\'ed\'ee\'e2\'e5\'ed\'e8\'e8 \'f1\'ee\'e1\'fb\'f2\'e8\'ff.\par
\'ce\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea \'f1\'ee\'e1\'fb\'f2\'e8\'ff (Event Handler): \'cc\'e5\'f2\'ee\'e4, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff \'ef\'f0\'e8 \'f1\'f0\'e0\'e1\'e0\'f2\'fb\'e2\'e0\'ed\'e8\'e8 \'f1\'ee\'e1\'fb\'f2\'e8\'ff.\par
\b\'cc\'e5\'f5\'e0\'ed\'e8\'e7\'ec \'f0\'e0\'e1\'ee\'f2\'fb \'f1\'ee\'e1\'fb\'f2\'e8\'e9\b0\par
\'ce\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'f1\'ee\'e1\'fb\'f2\'e8\'ff: \'c8\'e7\'e4\'e0\'f2\'e5\'eb\'fc \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'e5\'f2 \'f1\'ee\'e1\'fb\'f2\'e8\'e5 \'ea\'e0\'ea \'f7\'eb\'e5\'ed \'ea\'eb\'e0\'f1\'f1\'e0 \'f1 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5\'ec \'ea\'eb\'fe\'f7\'e5\'e2\'ee\'e3\'ee \'f1\'eb\'ee\'e2\'e0 event \'e8 \'e4\'e5\'eb\'e5\'e3\'e0\'f2\'e0, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'e5\'f2 \'f1\'e8\'e3\'ed\'e0\'f2\'f3\'f0\'f3 \'ec\'e5\'f2\'ee\'e4\'ee\'e2-\'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'ee\'e2.\par
\'cf\'ee\'e4\'ef\'e8\'f1\'ea\'e0 \'ed\'e0 \'f1\'ee\'e1\'fb\'f2\'e8\'e5: \'cf\'ee\'e4\'ef\'e8\'f1\'f7\'e8\'ea\'e8 \'e4\'ee\'e1\'e0\'e2\'eb\'ff\'fe\'f2 \'f1\'e2\'ee\'e8 \'ec\'e5\'f2\'ee\'e4\'fb-\'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'e8 \'ea \'f1\'ee\'e1\'fb\'f2\'e8\'fe \'e8\'e7\'e4\'e0\'f2\'e5\'eb\'ff \'f1 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5\'ec \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 +=.\par
\'c2\'fb\'e7\'ee\'e2 \'f1\'ee\'e1\'fb\'f2\'e8\'ff: \'c8\'e7\'e4\'e0\'f2\'e5\'eb\'fc \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2 \'f1\'ee\'e1\'fb\'f2\'e8\'e5 \'f1 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5\'ec \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 ? (\'e4\'eb\'ff \'ef\'f0\'ee\'e2\'e5\'f0\'ea\'e8 \'ed\'e0 null) \'e8 \'f1\'ea\'ee\'e1\'ee\'ea (), \'ef\'e5\'f0\'e5\'e4\'e0\'e2\'e0\'ff \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'fb\'e5 \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2\'fb.\par
\'c2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5 \'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'ee\'e2: \'d1\'e8\'f1\'f2\'e5\'ec\'e0 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2 \'e2\'f1\'e5 \'e7\'e0\'f0\'e5\'e3\'e8\'f1\'f2\'f0\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e5 \'ec\'e5\'f2\'ee\'e4\'fb-\'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'e8 \'e2 \'ef\'ee\'f0\'ff\'e4\'ea\'e5 \'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'ff.\par
\b\'cf\'f0\'e5\'e8\'ec\'f3\'f9\'e5\'f1\'f2\'e2\'e0 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'f1\'ee\'e1\'fb\'f2\'e8\'e9\b0\par
\'d1\'eb\'e0\'e1\'e0\'ff \'f1\'e2\'ff\'e7\'fc (Loose Coupling): \'c8\'e7\'e4\'e0\'f2\'e5\'eb\'fc \'ed\'e5 \'e7\'ed\'e0\'e5\'f2, \'ea\'e0\'ea\'e8\'e5 \'ea\'ee\'ed\'ea\'f0\'e5\'f2\'ed\'ee \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'ef\'ee\'e4\'ef\'e8\'f1\'e0\'ed\'fb \'ed\'e0 \'f1\'ee\'e1\'fb\'f2\'e8\'e5.\par
\'d0\'e0\'f1\'f8\'e8\'f0\'ff\'e5\'ec\'ee\'f1\'f2\'fc: \'cd\'ee\'e2\'fb\'e5 \'ef\'ee\'e4\'ef\'e8\'f1\'f7\'e8\'ea\'e8 \'ec\'ee\'e3\'f3\'f2 \'eb\'e5\'e3\'ea\'ee \'f0\'e5\'e3\'e8\'f1\'f2\'f0\'e8\'f0\'ee\'e2\'e0\'f2\'fc\'f1\'ff \'ed\'e0 \'f1\'ee\'e1\'fb\'f2\'e8\'e5, \'ed\'e5 \'e8\'e7\'ec\'e5\'ed\'ff\'ff \'ea\'ee\'e4 \'e8\'e7\'e4\'e0\'f2\'e5\'eb\'ff.\par
\'cc\'ee\'e4\'f3\'eb\'fc\'ed\'ee\'f1\'f2\'fc: \'ca\'ee\'e4 \'f0\'e0\'e7\'e4\'e5\'eb\'ff\'e5\'f2\'f1\'ff \'ed\'e0 \'ed\'e5\'e7\'e0\'e2\'e8\'f1\'e8\'ec\'fb\'e5 \'ea\'ee\'ec\'ef\'ee\'ed\'e5\'ed\'f2\'fb, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'e2\'e7\'e0\'e8\'ec\'ee\'e4\'e5\'e9\'f1\'f2\'e2\'f3\'fe\'f2 \'f7\'e5\'f0\'e5\'e7 \'f1\'ee\'e1\'fb\'f2\'e8\'ff.\par
\'d0\'e5\'e0\'ea\'f2\'e8\'e2\'ed\'ee\'f1\'f2\'fc: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'f1\'ee\'e7\'e4\'e0\'e2\'e0\'f2\'fc \'f1\'e8\'f1\'f2\'e5\'ec\'fb, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'f0\'e5\'e0\'e3\'e8\'f0\'f3\'fe\'f2 \'ed\'e0 \'f1\'ee\'e1\'fb\'f2\'e8\'ff \'e2 \'f0\'e5\'e0\'eb\'fc\'ed\'ee\'ec \'e2\'f0\'e5\'ec\'e5\'ed\'e8.\par
\b\'cf\'f0\'e8\'ec\'e5\'f0\'fb\par
\'cf\'f0\'e8\'ec\'e5\'f0 1: \'cf\'f0\'ee\'f1\'f2\'e5\'e9\'f8\'e8\'e9 \'ef\'f0\'e8\'ec\'e5\'f0 \'f1\'ee\'e1\'fb\'f2\'e8\'ff Button \'e8 \'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'e0 Click\par
\b0 using System;\par
// 1. \'c8\'e7\'e4\'e0\'f2\'e5\'eb\'fc (\'e8\'f1\'f2\'ee\'f7\'ed\'e8\'ea \'f1\'ee\'e1\'fb\'f2\'e8\'ff)\par
public class Button\par
\{\par
    // 2. \'c4\'e5\'eb\'e5\'e3\'e0\'f2, \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'fe\'f9\'e8\'e9 \'f1\'e8\'e3\'ed\'e0\'f2\'f3\'f0\'f3 \'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'e0 \'f1\'ee\'e1\'fb\'f2\'e8\'ff\par
    public delegate void ClickEventHandler(object sender, EventArgs e);\par
    // 3. \'d1\'ee\'e1\'fb\'f2\'e8\'e5\par
    public event ClickEventHandler Click;\par
    // \'cc\'e5\'f2\'ee\'e4 \'e4\'eb\'ff \'e8\'ec\'e8\'f2\'e0\'f6\'e8\'e8 \'ed\'e0\'e6\'e0\'f2\'e8\'ff \'ea\'ed\'ee\'ef\'ea\'e8\par
    public void OnClick()\par
    \{\par
        // 4. \'c2\'fb\'e7\'fb\'e2\'e0\'e5\'ec \'f1\'ee\'e1\'fb\'f2\'e8\'e5 (\'e5\'f1\'eb\'e8 \'e5\'f1\'f2\'fc \'ef\'ee\'e4\'ef\'e8\'f1\'f7\'e8\'ea\'e8)\par
        Click?.Invoke(this, EventArgs.Empty);\par
    \}\par
\}\par
// 5. \'cf\'ee\'e4\'ef\'e8\'f1\'f7\'e8\'ea (\'ef\'f0\'e8\'e5\'ec\'ed\'e8\'ea \'f1\'ee\'e1\'fb\'f2\'e8\'ff)\par
public class ButtonClickHandler\par
\{\par
    // 6. \'cc\'e5\'f2\'ee\'e4-\'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea \'f1\'ee\'e1\'fb\'f2\'e8\'ff\par
    public void HandleClick(object sender, EventArgs e)\par
    \{\par
        Console.WriteLine("\'ca\'ed\'ee\'ef\'ea\'e0 \'e1\'fb\'eb\'e0 \'ed\'e0\'e6\'e0\'f2\'e0!");\par
    \}\par
\}\par
public class Example\par
\{\par
    public static void Main(string[] args)\par
    \{\par
        Button button = new Button();\par
        ButtonClickHandler handler = new ButtonClickHandler();\par
        // 7. \'cf\'ee\'e4\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'ec\'f1\'ff \'ed\'e0 \'f1\'ee\'e1\'fb\'f2\'e8\'e5\par
        button.Click += handler.HandleClick;\par
        // \'c8\'ec\'e8\'f2\'e8\'f0\'f3\'e5\'ec \'ed\'e0\'e6\'e0\'f2\'e8\'e5 \'ea\'ed\'ee\'ef\'ea\'e8\par
        button.OnClick(); // \'c2\'fb\'e2\'ee\'e4: \'ca\'ed\'ee\'ef\'ea\'e0 \'e1\'fb\'eb\'e0 \'ed\'e0\'e6\'e0\'f2\'e0!\par
        button.Click -= handler.HandleClick; // \'ee\'f2\'ef\'e8\'f1\'ea\'e0 \'ee\'f2 \'f1\'ee\'e1\'fb\'f2\'e8\'ff\par
        button.OnClick(); // \'cd\'e8\'f7\'e5\'e3\'ee \'ed\'e5 \'e2\'fb\'e2\'ee\'e4\'e8\'f2\'f1\'ff\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 2: \'d1\'ee\'e1\'fb\'f2\'e8\'e5 \'f1 \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'ec\'e8 \'e4\'e0\'ed\'ed\'fb\'ec\'e8\b0\par
using System;\par
// \'c8\'e7\'e4\'e0\'f2\'e5\'eb\'fc\par
public class TemperatureSensor\par
\{\par
    public delegate void TemperatureChangeEventHandler(object sender, TemperatureChangeEventArgs e);\par
    public event TemperatureChangeEventHandler TemperatureChanged;\par
    private double _temperature;\par
    public double Temperature\par
    \{\par
        get \{ return _temperature; \}\par
        set\par
        \{\par
            if (Math.Abs(value - _temperature) > 0.5) // \'ed\'e0\'ef\'f0\'e8\'ec\'e5\'f0, \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'e5 \'e1\'ee\'eb\'e5\'e5 0.5 \'e3\'f0\'e0\'e4\'f3\'f1\'ee\'e2 \'f1\'f7\'e8\'f2\'e0\'e5\'f2\'f1\'ff \'e7\'ed\'e0\'f7\'e8\'f2\'e5\'eb\'fc\'ed\'fb\'ec\par
            \{\par
                OnTemperatureChanged(value);\par
            \}\par
            _temperature = value;\par
        \}\par
    \}\par
    protected virtual void OnTemperatureChanged(double newTemperature)\par
    \{\par
        TemperatureChanged?.Invoke(this, new TemperatureChangeEventArgs(newTemperature, _temperature));\par
    \}\par
\}\par
// \'cf\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'e5 \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2\'fb \'f1\'ee\'e1\'fb\'f2\'e8\'ff\par
public class TemperatureChangeEventArgs : EventArgs\par
\{\par
    public double NewTemperature \{ get; \}\par
    public double OldTemperature \{ get; \}\par
\par
    public TemperatureChangeEventArgs(double newTemperature, double oldTemperature)\par
    \{\par
        NewTemperature = newTemperature;\par
        OldTemperature = oldTemperature;\par
    \}\par
\}\par
// \'cf\'ee\'e4\'ef\'e8\'f1\'f7\'e8\'ea\par
public class TemperatureDisplay\par
\{\par
    public void HandleTemperatureChanged(object sender, TemperatureChangeEventArgs e)\par
    \{\par
        Console.WriteLine($"\'d2\'e5\'ec\'ef\'e5\'f0\'e0\'f2\'f3\'f0\'e0 \'e8\'e7\'ec\'e5\'ed\'e8\'eb\'e0\'f1\'fc \'f1 \{e.OldTemperature\}\f1\lang1033\'b0C \f0\lang1049\'ed\'e0 \{e.NewTemperature\}\f1\lang1033\'b0C");\par
    \}\par
\}\par
public class Example2\par
\{\par
    public static void Main(string[] args)\par
    \{\par
        TemperatureSensor sensor = new TemperatureSensor();\par
        TemperatureDisplay display = new TemperatureDisplay();\par
        sensor.TemperatureChanged += display.HandleTemperatureChanged;\par
        sensor.Temperature = 25;\par
        sensor.Temperature = 25.1; //\f0\lang1049\'ed\'e5 \'e2\'fb\'e2\'e5\'e4\'e5\'f2 \'f2\'ea \'f0\'e0\'e7\'ed\'e8\'f6\'e0 < 0.5\par
        sensor.Temperature = 26.0; //\'e2\'fb\'e2\'e5\'e4\'e5\'f2\par
        sensor.Temperature = 27.0; // \'e2\'fb\'e2\'e5\'e4\'e5\'f2\par
        sensor.Temperature = 27.3; //\'ed\'e5 \'e2\'fb\'e2\'e5\'e4\'e5\'f2 \'f2\'ea \'f0\'e0\'e7\'ed\'e8\'f6\'e0 < 0.5\par
    \}\par
\}\par
\b\'c8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5 \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'fb\'f5 \'e4\'e5\'eb\'e5\'e3\'e0\'f2\'ee\'e2\b0\par
\'c4\'eb\'ff \'e1\'ee\'eb\'fc\'f8\'e8\'ed\'f1\'f2\'e2\'e0 \'f1\'f6\'e5\'ed\'e0\'f0\'e8\'e5\'e2 \'ec\'ee\'e6\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'fb\'e5 \'e4\'e5\'eb\'e5\'e3\'e0\'f2\'fb EventHandler \'e8 EventHandler<TEventArgs>, \'f7\'f2\'ee \'f3\'ef\'f0\'ee\'f9\'e0\'e5\'f2 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'f1\'ee\'e1\'fb\'f2\'e8\'e9:\par
using System;\par
public class Button2\par
\{\par
    public event EventHandler Click; // \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'fb\'e9 EventHandler\par
    public event EventHandler<ClickEventArgs> ClickWithData; // \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec EventHandler<TEventArgs>\par
    public void OnClick()\par
    \{\par
        Click?.Invoke(this, EventArgs.Empty);\par
        ClickWithData?.Invoke(this, new ClickEventArgs() \{ ClickTime = DateTime.Now \});\par
    \}\par
\}\par
public class ClickEventArgs : EventArgs\par
\{\par
    public DateTime ClickTime \{ get; set; \}\par
\f1\lang1033\}\f0\lang1049\par
public class Example3\par
\{\par
    public static void Main(string[] args)\par
    \{\par
         Button2 button = new Button2();\par
         //\'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec \'eb\'ff\'ec\'e1\'e4\'e0 \'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'e5 \'e4\'eb\'ff \'ef\'ee\'e4\'ef\'e8\'f1\'ea\'e8\par
         button.Click += (sender, e) => Console.WriteLine("\'ca\'ed\'ee\'ef\'ea\'e0 \'ed\'e0\'e6\'e0\'f2\'e0!");\par
         button.ClickWithData += (sender, e) => Console.WriteLine($"\'ca\'ed\'ee\'ef\'ea\'e0 \'ed\'e0\'e6\'e0\'f2\'e0 \'e2: \{e.ClickTime\}");\par
         button.OnClick();\par
    \}\par
\}\par
\f1\lang1033 ___\par
\b\f0\lang1049\'ce\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'ea\'eb\'e0\'f1\'f1\'e0 \'e2 C#\b0\par
\'ce\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'fb \f2\emdash  \f0\'fd\'f2\'ee \'f1\'ef\'e5\'f6\'e8\'e0\'eb\'fc\'ed\'fb\'e5 \'f1\'e8\'ec\'e2\'ee\'eb\'fb, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'e4\'eb\'ff \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e9 \'ed\'e0\'e4 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'ec\'e8 \'e8 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff\'ec\'e8. \'c2 C# \'ec\'ee\'e6\'ed\'ee \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e0\'f2\'fc \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'fb, \'f7\'f2\'ee\'e1\'fb \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e8\'f2\'fc, \'ea\'e0\'ea \'ee\'ed\'e8 \'e4\'ee\'eb\'e6\'ed\'fb \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'f1 \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'ec\'e8 \'f2\'e8\'ef\'e0\'ec\'e8 \'e4\'e0\'ed\'ed\'fb\'f5 (\'ea\'eb\'e0\'f1\'f1\'e0\'ec\'e8 \'e8 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e0\'ec\'e8).\par
\b\'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2\b0\par
\'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2 \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e8\'f2\'fc \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'f1\'ea\'ee\'e5 \'ef\'ee\'e2\'e5\'e4\'e5\'ed\'e8\'e5 \'e4\'eb\'ff \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'fb\'f5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2 (\'ed\'e0\'ef\'f0\'e8\'ec\'e5\'f0, +, -, *, /) \'ef\'f0\'e8 \'f0\'e0\'e1\'ee\'f2\'e5 \'f1 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\'ec\'e8 \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'f5 \'ea\'eb\'e0\'f1\'f1\'ee\'e2. \'dd\'f2\'ee \'e4\'e5\'eb\'e0\'e5\'f2 \'ea\'ee\'e4 \'e1\'ee\'eb\'e5\'e5 \'e8\'ed\'f2\'f3\'e8\'f2\'e8\'e2\'ed\'ee \'ef\'ee\'ed\'ff\'f2\'ed\'fb\'ec \'e8 \'f3\'e4\'ee\'e1\'ed\'fb\'ec \'e4\'eb\'ff \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff.\b\par
\'cf\'f0\'e8\'ec\'e5\'f0\'fb \'ed\'e0 \'ff\'e7\'fb\'ea\'e5 C#\par
\'cf\'f0\'e8\'ec\'e5\'f0 1: \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 +\b0\par
public class Complex\par
\{\par
    public double Real \{ get; set; \}\par
    public double Imaginary \{ get; set; \}\par
    public Complex(double real, double imaginary)\par
    \{\par
        Real = real;\par
        Imaginary = imaginary;\par
    \}\par
    // \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 +\par
    public static Complex operator +(Complex c1, Complex c2)\par
    \{\par
        return new Complex(c1.Real + c2.Real, c1.Imaginary + c2.Imaginary);\par
    \}\par
    public override string ToString()\par
    \{\par
        return $"\{Real\} + \{Imaginary\}i";\par
    \}\par
\}\par
class Program\par
\{\par
    static void Main()\par
    \{\par
        Complex c1 = new Complex(1.0, 2.0);\par
        Complex c2 = new Complex(3.0, 4.0);\par
        Complex result = c1 + c2;\par
        Console.WriteLine(result); // Output: 4.0 + 6.0i\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 2: \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 == \'e8 !=\b0\par
public class Point\par
\{\par
    public int X \{ get; set; \}\par
    public int Y \{ get; set; \}\par
    public Point(int x, int y)\par
    \{\par
        X = x;\par
        Y = y;\par
    \}\par
    // \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 ==\par
    public static bool operator ==(Point p1, Point p2)\par
    \{\par
        return p1.X == p2.X && p1.Y == p2.Y;\par
    \}\par
    // \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 !=\par
    public static bool operator !=(Point p1, Point p2)\par
    \{\par
        return !(p1 == p2);\par
    \}\par
    public override bool Equals(object obj)\par
    \{\par
        if (obj is Point)\par
        \{\par
            Point p = (Point)obj;\par
            return this == p;\par
        \}\par
        return false;\par
    \}\par
    public override int GetHashCode()\par
    \{\par
        return X.GetHashCode() ^ Y.GetHashCode();\par
    \}\par
\}\par
class Program\par
\{\par
    static void Main()\par
    \{\par
        Point p1 = new Point(1, 2);\par
        Point p2 = new Point(1, 2);\par
        Console.WriteLine(p1 == p2); // Output: True\par
        Console.WriteLine(p1 != p2); // Output: False\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 3: \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 > \'e8 <\b0\par
public class Box\par
\{\par
    public int Width \{ get; set; \}\par
    public int Height \{ get; set; \}\par
\par
    public Box(int width, int height)\par
    \{\par
        Width = width;\par
        Height = height;\par
    \}\par
    // \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 >\par
    public static bool operator >(Box b1, Box b2)\par
    \{\par
        return (b1.Width * b1.Height) > (b2.Width * b2.Height);\par
    \}\par
    // \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 <\par
    public static bool operator <(Box b1, Box b2)\par
    \{\par
        return (b1.Width * b1.Height) < (b2.Width * b2.Height);\par
    \}\par
\}\par
class Program\par
\{\par
    static void Main()\par
    \{\par
        Box box1 = new Box(3, 4);\par
        Box box2 = new Box(2, 5);\par
        Console.WriteLine(box1 > box2); // Output: True\par
        Console.WriteLine(box1 < box2); // Output: False\par
    \}\par
\par
\b\'d1\'ee\'e1\'fb\'f2\'e8\'ff \'e2 C#\b0\par
\b\'d1\'ee\'e1\'fb\'f2\'e8\'ff \b0\f2\emdash  \f0\'fd\'f2\'ee \'ec\'e5\'f5\'e0\'ed\'e8\'e7\'ec, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\'ec \'f3\'e2\'e5\'e4\'ee\'ec\'eb\'ff\'f2\'fc \'e4\'f0\'f3\'e3\'e8\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'ee \'ef\'f0\'ee\'e8\'e7\'ee\'f8\'e5\'e4\'f8\'e8\'f5 \'e4\'e5\'e9\'f1\'f2\'e2\'e8\'ff\'f5. \'d1\'ee\'e1\'fb\'f2\'e8\'ff \'ee\'f1\'ed\'ee\'e2\'e0\'ed\'fb \'ed\'e0 \'e4\'e5\'eb\'e5\'e3\'e0\'f2\'e0\'f5 \'e8 \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'fe\'f2 \'e4\'ee\'ef\'ee\'eb\'ed\'e8\'f2\'e5\'eb\'fc\'ed\'f3\'fe \'f4\'f3\'ed\'ea\'f6\'e8\'ee\'ed\'e0\'eb\'fc\'ed\'ee\'f1\'f2\'fc \'e4\'eb\'ff \'f3\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'ff \'ef\'ee\'e4\'ef\'e8\'f1\'ea\'ee\'e9 \'e8 \'ee\'f2\'ef\'e8\'f1\'ea\'ee\'e9 \'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'ee\'e2.\par
\b\'ce\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'f1\'ee\'e1\'fb\'f2\'e8\'ff\b0\par
\'d1\'ee\'e1\'fb\'f2\'e8\'e5 \'ee\'e1\'fa\'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'f1 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5\'ec \'ea\'eb\'fe\'f7\'e5\'e2\'ee\'e3\'ee \'f1\'eb\'ee\'e2\'e0 event \'e8 \'e4\'e5\'eb\'e5\'e3\'e0\'f2\'e0, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'e5\'f2 \'f1\'e8\'e3\'ed\'e0\'f2\'f3\'f0\'f3 \'ec\'e5\'f2\'ee\'e4\'ee\'e2-\'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'ee\'e2.\par
\b\'cf\'f0\'e8\'ec\'e5\'f0:\b0\par
public delegate void Notify(string message);\par
public class Publisher\par
\{\par
    public event Notify OnNotify;\par
    public void RaiseEvent(string message)\par
    \{\par
        if (OnNotify != null)\par
        \{\par
            OnNotify(message);\par
        \}\par
    \}\par
\}\par
\b\'cf\'ee\'e4\'ef\'e8\'f1\'ea\'e0 \'ed\'e0 \'f1\'ee\'e1\'fb\'f2\'e8\'e5\b0\par
\'ca\'eb\'e0\'f1\'f1\'fb, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'f5\'ee\'f2\'ff\'f2 \'ef\'ee\'eb\'f3\'f7\'e0\'f2\'fc \'f3\'e2\'e5\'e4\'ee\'ec\'eb\'e5\'ed\'e8\'ff \'ee \'f1\'ee\'e1\'fb\'f2\'e8\'e8, \'e4\'ee\'eb\'e6\'ed\'fb \'ef\'ee\'e4\'ef\'e8\'f1\'e0\'f2\'fc\'f1\'ff \'ed\'e0 \'ed\'e5\'e3\'ee, \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'e8\'e2 \'ec\'e5\'f2\'ee\'e4-\'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea.\par
\b\'cf\'f0\'e8\'ec\'e5\'f0:\b0\par
public class Subscriber\par
\{\par
    public void Subscribe(Publisher publisher)\par
    \{\par
        publisher.OnNotify += HandleNotification;\par
    \}\par
    public void HandleNotification(string message)\par
    \{\par
        Console.WriteLine("Received message: " + message);\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'f1\'ee\'e1\'fb\'f2\'e8\'e9\b0\par
\'cf\'ee\'eb\'ed\'fb\'e9 \'ef\'f0\'e8\'ec\'e5\'f0, \'ef\'ee\'ea\'e0\'e7\'fb\'e2\'e0\'fe\'f9\'e8\'e9, \'ea\'e0\'ea \'ee\'e1\'fa\'ff\'e2\'e8\'f2\'fc \'f1\'ee\'e1\'fb\'f2\'e8\'e5, \'ef\'ee\'e4\'ef\'e8\'f1\'e0\'f2\'fc\'f1\'ff \'ed\'e0 \'ed\'e5\'e3\'ee \'e8 \'e2\'fb\'e7\'e2\'e0\'f2\'fc \'e5\'e3\'ee:\par
public delegate void Notify(string message);\par
public class Publisher\par
\{\par
    public event Notify OnNotify;\par
    public void RaiseEvent(string message)\par
    \{\par
        if (OnNotify != null)\par
        \{\par
            OnNotify(message);\par
        \}\par
    \}\par
\}\par
public class Subscriber\par
\{\par
    public void Subscribe(Publisher publisher)\par
    \{\par
        publisher.OnNotify += HandleNotification;\par
    \}\par
    public void HandleNotification(string message)\par
    \{\par
        Console.WriteLine("Received message: " + message);\par
    \}\par
\}\par
public class Program\par
\{\par
    public static void Main()\par
    \{\par
        Publisher publisher = new Publisher();\par
        Subscriber subscriber = new Subscriber();\par
        subscriber.Subscribe(publisher);\par
        publisher.RaiseEvent("Hello, Event!");\par
    \}\par
\}\par
\b\'cf\'f0\'e5\'e8\'ec\'f3\'f9\'e5\'f1\'f2\'e2\'e0 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'f1\'ee\'e1\'fb\'f2\'e8\'e9:\b0\par
\'c3\'e8\'e1\'ea\'ee\'f1\'f2\'fc: \'d1\'ee\'e1\'fb\'f2\'e8\'ff \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f2 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\'ec \'e2\'e7\'e0\'e8\'ec\'ee\'e4\'e5\'e9\'f1\'f2\'e2\'ee\'e2\'e0\'f2\'fc \'e0\'f1\'e8\'ed\'f5\'f0\'ee\'ed\'ed\'ee \'e8 \'f3\'e2\'e5\'e4\'ee\'ec\'eb\'ff\'f2\'fc \'e4\'f0\'f3\'e3 \'e4\'f0\'f3\'e3\'e0 \'ee \'ef\'f0\'ee\'e8\'e7\'ee\'f8\'e5\'e4\'f8\'e8\'f5 \'e4\'e5\'e9\'f1\'f2\'e2\'e8\'ff\'f5.\par
\'d0\'e0\'f1\'f8\'e8\'f0\'ff\'e5\'ec\'ee\'f1\'f2\'fc: \'cd\'ee\'e2\'fb\'e5 \'ee\'e1\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'e8 \'ec\'ee\'e3\'f3\'f2 \'eb\'e5\'e3\'ea\'ee \'e4\'ee\'e1\'e0\'e2\'eb\'ff\'f2\'fc\'f1\'ff \'e8\'eb\'e8 \'f3\'e4\'e0\'eb\'ff\'f2\'fc\'f1\'ff \'e1\'e5\'e7 \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'ff \'ea\'ee\'e4\'e0, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2 \'f1\'ee\'e1\'fb\'f2\'e8\'e5.\par
\'c8\'ed\'ea\'e0\'ef\'f1\'f3\'eb\'ff\'f6\'e8\'ff: \'d1\'ee\'e1\'fb\'f2\'e8\'ff \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f2 \'f1\'ea\'f0\'fb\'f2\'fc \'e4\'e5\'f2\'e0\'eb\'e8 \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'e8 \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'e8\'f2\'fc \'f2\'ee\'eb\'fc\'ea\'ee \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1 \'e4\'eb\'ff \'e2\'e7\'e0\'e8\'ec\'ee\'e4\'e5\'e9\'f1\'f2\'e2\'e8\'ff.\b\i\f1\lang9\par
}
 