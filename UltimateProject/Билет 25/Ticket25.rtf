{\rtf1\ansi\ansicpg1251\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset204 Calibri;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\i\f0\fs22\lang1049\'d0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \'ea\'ee\'e4\'e0: \'ef\'ee\'ed\'ff\'f2\'e8\'e5, \'f6\'e5\'eb\'e8, \'ef\'f0\'e8\'ec\'e5\'f0\'fb.\par
\'cf\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec: \'ef\'ee\'ed\'ff\'f2\'e8\'e5, \'ef\'f0\'e8\'ec\'e5\'f0\'fb.\par
\'d0\'e0\'e7\'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'f3, \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f9\'f3\'fe \'f3\'e4\'e0\'eb\'e8\'f2\'fc \'e7\'e0\'ef\'e8\'f1\'fc \'e2 \'f2\'e0\'e1\'eb\'e8\'f6\'e5 \'e1\'e0\'e7\'fb \'e4\'e0\'ed\'ed\'fb\'f5 SQL Server \'f1 \'ef\'ee\'eb\'ff\'ec\'e8: \'c2\'f0\'e5\'ec\'ff \'e8 \'e4\'e0\'f2\'e0, \'cd\'e0\'e7\'e2\'e0\'ed\'e8\'e5 \'e7\'e0\'ec\'e5\'f2\'ea\'e8, \'d1\'ee\'e4\'e5\'f0\'e6\'e0\'ed\'e8\'e5 \'e7\'e0\'ec\'e5\'f2\'ea\'e8\f1\lang1033 .\par
\par
\i0\f0\lang1049\'d0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \b0\f2\emdash  \f0\'fd\'f2\'ee \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'ff \'e2\'ed\'f3\'f2\'f0\'e5\'ed\'ed\'e5\'e9 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'fb \'ea\'ee\'e4\'e0, \'ed\'e5 \'e8\'e7\'ec\'e5\'ed\'ff\'ff \'e5\'e3\'ee \'e2\'ed\'e5\'f8\'ed\'e5\'e3\'ee \'ef\'ee\'e2\'e5\'e4\'e5\'ed\'e8\'ff. \'c4\'f0\'f3\'e3\'e8\'ec\'e8 \'f1\'eb\'ee\'e2\'e0\'ec\'e8, \'e2\'fb \'ef\'e5\'f0\'e5\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2\'e5 \'ea\'ee\'e4, \'f7\'f2\'ee\'e1\'fb \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'e5\'e3\'ee \'e1\'ee\'eb\'e5\'e5 \'ef\'ee\'ed\'ff\'f2\'ed\'fb\'ec, \'f7\'e8\'f2\'e0\'e5\'ec\'fb\'ec, \'e3\'e8\'e1\'ea\'e8\'ec \'e8 \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'ec\'fb\'ec, \'ed\'ee \'ef\'f0\'e8 \'fd\'f2\'ee\'ec \'f4\'f3\'ed\'ea\'f6\'e8\'ee\'ed\'e0\'eb\'fc\'ed\'ee\'f1\'f2\'fc \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'ee\'f1\'f2\'e0\'e5\'f2\'f1\'ff \'ef\'f0\'e5\'e6\'ed\'e5\'e9.\par
\b\'ce\'f1\'ed\'ee\'e2\'ed\'fb\'e5 \'f6\'e5\'eb\'e8 \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0:\b0\par
\'d3\'eb\'f3\'f7\'f8\'e5\'ed\'e8\'e5 \'f7\'e8\'f2\'e0\'e5\'ec\'ee\'f1\'f2\'e8: \'ca\'ee\'e4 \'e4\'ee\'eb\'e6\'e5\'ed \'e1\'fb\'f2\'fc \'eb\'e5\'e3\'ea\'ee \'ef\'ee\'ed\'ff\'f2\'e5\'ed \'ed\'e5 \'f2\'ee\'eb\'fc\'ea\'ee \'e0\'e2\'f2\'ee\'f0\'f3, \'ed\'ee \'e8 \'e4\'f0\'f3\'e3\'e8\'ec \'f0\'e0\'e7\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'e0\'ec, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'e1\'f3\'e4\'f3\'f2 \'f1 \'ed\'e8\'ec \'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc. \'d0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \'e4\'e5\'eb\'e0\'e5\'f2 \'ea\'ee\'e4 \'e1\'ee\'eb\'e5\'e5 \'e2\'fb\'f0\'e0\'e7\'e8\'f2\'e5\'eb\'fc\'ed\'fb\'ec \'e8 \'ef\'f0\'ee\'f1\'f2\'fb\'ec \'e4\'eb\'ff \'ef\'ee\'ed\'e8\'ec\'e0\'ed\'e8\'ff.\par
\'d3\'ec\'e5\'ed\'fc\'f8\'e5\'ed\'e8\'e5 \'f1\'eb\'ee\'e6\'ed\'ee\'f1\'f2\'e8: \'d1\'eb\'ee\'e6\'ed\'fb\'e9 \'ea\'ee\'e4 \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'f2\'f0\'f3\'e4\'ed\'ee \'ec\'ee\'e4\'e8\'f4\'e8\'f6\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'e8 \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'f2\'fc. \'d0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \'ef\'ee\'ec\'ee\'e3\'e0\'e5\'f2 \'f0\'e0\'e7\'e1\'e8\'e2\'e0\'f2\'fc \'f1\'eb\'ee\'e6\'ed\'fb\'e5 \'e7\'e0\'e4\'e0\'f7\'e8 \'ed\'e0 \'e1\'ee\'eb\'e5\'e5 \'ec\'e5\'eb\'ea\'e8\'e5 \'e8 \'ef\'f0\'ee\'f1\'f2\'fb\'e5.\par
\'d3\'f1\'f2\'f0\'e0\'ed\'e5\'ed\'e8\'e5 \'e4\'f3\'e1\'eb\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff: \'cf\'ee\'e2\'f2\'ee\'f0\'ff\'fe\'f9\'e8\'e9\'f1\'ff \'ea\'ee\'e4 \'e7\'e0\'f2\'f0\'f3\'e4\'ed\'ff\'e5\'f2 \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'ff \'e8 \'ef\'ee\'e2\'fb\'f8\'e0\'e5\'f2 \'e2\'e5\'f0\'ee\'ff\'f2\'ed\'ee\'f1\'f2\'fc \'ee\'f8\'e8\'e1\'ee\'ea. \'d0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \'ef\'ee\'ec\'ee\'e3\'e0\'e5\'f2 \'e2\'fb\'e4\'e5\'eb\'e8\'f2\'fc \'ee\'e1\'f9\'f3\'fe \'f4\'f3\'ed\'ea\'f6\'e8\'ee\'ed\'e0\'eb\'fc\'ed\'ee\'f1\'f2\'fc \'e2 \'ef\'ee\'e2\'f2\'ee\'f0\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec\'fb\'e5 \'ec\'ee\'e4\'f3\'eb\'e8.\par
\'d3\'e2\'e5\'eb\'e8\'f7\'e5\'ed\'e8\'e5 \'e3\'e8\'e1\'ea\'ee\'f1\'f2\'e8: \'d0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \'ef\'ee\'e4\'e3\'ee\'f2\'e0\'e2\'eb\'e8\'e2\'e0\'e5\'f2 \'ea\'ee\'e4 \'ea \'e1\'f3\'e4\'f3\'f9\'e8\'ec \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'ff\'ec, \'e4\'e5\'eb\'e0\'ff \'e5\'e3\'ee \'e1\'ee\'eb\'e5\'e5 \'ec\'ee\'e4\'f3\'eb\'fc\'ed\'fb\'ec \'e8 \'f0\'e0\'f1\'f8\'e8\'f0\'ff\'e5\'ec\'fb\'ec.\par
\'d3\'eb\'f3\'f7\'f8\'e5\'ed\'e8\'e5 \'e4\'e8\'e7\'e0\'e9\'ed\'e0: \'d0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \'ec\'ee\'e6\'e5\'f2 \'ef\'ee\'ec\'ee\'f7\'fc \'f3\'eb\'f3\'f7\'f8\'e8\'f2\'fc \'e0\'f0\'f5\'e8\'f2\'e5\'ea\'f2\'f3\'f0\'f3 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'ed\'ee\'e3\'ee \'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e5\'ed\'e8\'ff, \'e4\'e5\'eb\'e0\'ff \'e5\'e3\'ee \'e1\'ee\'eb\'e5\'e5 \'eb\'ee\'e3\'e8\'f7\'ed\'fb\'ec \'e8 \'f1\'ee\'e3\'eb\'e0\'f1\'ee\'e2\'e0\'ed\'ed\'fb\'ec.\par
\'cf\'ee\'e2\'fb\'f8\'e5\'ed\'e8\'e5 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'ed\'ee\'f1\'f2\'e8 (\'ea\'ee\'f1\'e2\'e5\'ed\'ed\'ee): \'d5\'ee\'f2\'ff \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \'ed\'e0\'ef\'f0\'ff\'ec\'f3\'fe \'ed\'e5 \'e2\'eb\'e8\'ff\'e5\'f2 \'ed\'e0 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'ed\'ee\'f1\'f2\'fc, \'ee\'ed \'ec\'ee\'e6\'e5\'f2 \'e2\'fb\'ff\'e2\'e8\'f2\'fc \'f3\'e7\'ea\'e8\'e5 \'ec\'e5\'f1\'f2\'e0 \'e8 \'ef\'ee\'f2\'e5\'ed\'f6\'e8\'e0\'eb\'fc\'ed\'fb\'e5 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb, \'f7\'f2\'ee \'e2 \'e8\'f2\'ee\'e3\'e5 \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'f2 \'ea \'f3\'eb\'f3\'f7\'f8\'e5\'ed\'e8\'fe \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'ed\'ee\'f1\'f2\'e8.\par
\'d3\'ef\'f0\'ee\'f9\'e5\'ed\'e8\'e5 \'f2\'e5\'f1\'f2\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff: \'d5\'ee\'f0\'ee\'f8\'ee \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e9 \'ea\'ee\'e4 \'eb\'e5\'e3\'f7\'e5 \'f2\'e5\'f1\'f2\'e8\'f0\'ee\'e2\'e0\'f2\'fc. \'d0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \'ec\'ee\'e6\'e5\'f2 \'f1\'e4\'e5\'eb\'e0\'f2\'fc \'ea\'ee\'e4 \'e1\'ee\'eb\'e5\'e5 \'ec\'ee\'e4\'f3\'eb\'fc\'ed\'fb\'ec \'e8 \'f2\'e5\'f1\'f2\'e8\'f0\'f3\'e5\'ec\'fb\'ec.\par
\b\'ce\'f1\'ed\'ee\'e2\'ed\'fb\'e5 \'e2\'e8\'e4\'fb \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0 (\'ef\'f0\'e8\'ec\'e5\'f0\'fb):\b0\par
\b\'cf\'e5\'f0\'e5\'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'e8\'e5 (Renaming):\b0\par
\'cf\'f0\'ee\'e1\'eb\'e5\'ec\'e0: \'cd\'e5\'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f2\'e8\'e2\'ed\'fb\'e5 \'e8\'ec\'e5\'ed\'e0 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5, \'ec\'e5\'f2\'ee\'e4\'ee\'e2, \'ea\'eb\'e0\'f1\'f1\'ee\'e2.\par
\'d0\'e5\'f8\'e5\'ed\'e8\'e5: \'cf\'e5\'f0\'e5\'e8\'ec\'e5\'ed\'ee\'e2\'e0\'ed\'e8\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'e2 \'e1\'ee\'eb\'e5\'e5 \'ef\'ee\'ed\'ff\'f2\'ed\'fb\'e5 \'e8 \'ee\'ef\'e8\'f1\'e0\'f2\'e5\'eb\'fc\'ed\'fb\'e5 \'e8\'ec\'e5\'ed\'e0.\par
// \'cf\'eb\'ee\'f5\'ee\par
int a = 5;\par
void DoSth() \{ /*...*/ \}\par
// \'d5\'ee\'f0\'ee\'f8\'ee\par
int numberOfUsers = 5;\par
void ProcessOrder() \{ /*...*/ \}\par
\b\'c8\'e7\'e2\'eb\'e5\'f7\'e5\'ed\'e8\'e5 \'ec\'e5\'f2\'ee\'e4\'e0 (Extract Method):\b0\par
\'cf\'f0\'ee\'e1\'eb\'e5\'ec\'e0: \'c4\'eb\'e8\'ed\'ed\'fb\'e5 \'ec\'e5\'f2\'ee\'e4\'fb, \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'fe\'f9\'e8\'e5 \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'e4\'e5\'e9\'f1\'f2\'e2\'e8\'e9.\par
\'d0\'e5\'f8\'e5\'ed\'e8\'e5: \'c2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'f7\'e0\'f1\'f2\'e8 \'ea\'ee\'e4\'e0 \'e2 \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'fb\'e5 \'ec\'e5\'f2\'ee\'e4\'fb \'f1 \'ef\'ee\'ed\'ff\'f2\'ed\'fb\'ec\'e8 \'e8\'ec\'e5\'ed\'e0\'ec\'e8.\par
// \'cf\'eb\'ee\'f5\'ee\par
void ProcessOrder(Order order) \{\par
  // \'ca\'ee\'e4 \'e4\'eb\'ff \'e2\'e0\'eb\'e8\'e4\'e0\'f6\'e8\'e8 \'e7\'e0\'ea\'e0\'e7\'e0\par
  if(order == null) throw new Exception("invalid order");\par
  // \'ca\'ee\'e4 \'e4\'eb\'ff \'f0\'e0\'f1\'f7\'e5\'f2\'e0 \'f1\'f2\'ee\'e8\'ec\'ee\'f1\'f2\'e8\par
  var total = order.Quantity * order.Price;\par
  // \'ca\'ee\'e4 \'e4\'eb\'ff \'f1\'ee\'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'e2 \'c1\'c4\par
  Console.WriteLine(total);\par
\}\par
// \'d5\'ee\'f0\'ee\'f8\'ee\par
void ProcessOrder(Order order) \{\par
  ValidateOrder(order);\par
  var total = CalculateTotal(order);\par
  SaveToDatabase(order);\par
\}\par
void ValidateOrder(Order order)\{...\}\par
int CalculateTotal(Order order)\{...\}\par
void SaveToDatabase(Order order)\{...\}\par
\b\'c8\'e7\'e2\'eb\'e5\'f7\'e5\'ed\'e8\'e5 \'ea\'eb\'e0\'f1\'f1\'e0 (Extract Class):\b0\par
\'cf\'f0\'ee\'e1\'eb\'e5\'ec\'e0: \'ca\'eb\'e0\'f1\'f1 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2 \'f1\'eb\'e8\'f8\'ea\'ee\'ec \'ec\'ed\'ee\'e3\'ee \'ee\'e1\'ff\'e7\'e0\'ed\'ed\'ee\'f1\'f2\'e5\'e9.\par
\'d0\'e5\'f8\'e5\'ed\'e8\'e5: \'c2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'f7\'e0\'f1\'f2\'e8 \'f4\'f3\'ed\'ea\'f6\'e8\'ee\'ed\'e0\'eb\'fc\'ed\'ee\'f1\'f2\'e8 \'e2 \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'fb\'e9 \'ea\'eb\'e0\'f1\'f1.\par
// \'cf\'eb\'ee\'f5\'ee\par
public class Order\par
\{\par
  public void ProcessPayment();\par
  public void SaveToDatabase();\par
\}\par
// \'d5\'ee\'f0\'ee\'f8\'ee\par
public class Order\par
\{\par
    public void SaveToDatabase()\{\}\par
\}\par
public class PaymentProcessor\par
\{\par
   public void ProcessPayment()\{\}\par
\}\par
\b\'d3\'e4\'e0\'eb\'e5\'ed\'e8\'e5 \'e4\'f3\'e1\'eb\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff (Remove Duplicated Code):\b0\par
\'cf\'f0\'ee\'e1\'eb\'e5\'ec\'e0: \'ce\'e4\'e8\'ed \'e8 \'f2\'ee\'f2 \'e6\'e5 \'ea\'ee\'e4 \'ef\'ee\'e2\'f2\'ee\'f0\'ff\'e5\'f2\'f1\'ff \'e2 \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'e8\'f5 \'ec\'e5\'f1\'f2\'e0\'f5.\par
\'d0\'e5\'f8\'e5\'ed\'e8\'e5: \'c2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ee\'e1\'f9\'e5\'e3\'ee \'ea\'ee\'e4\'e0 \'e2 \'ec\'e5\'f2\'ee\'e4 \'e8\'eb\'e8 \'ea\'eb\'e0\'f1\'f1, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ec\'ee\'e6\'ed\'ee \'ef\'ee\'e2\'f2\'ee\'f0\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc.\par
 //\'cf\'eb\'ee\'f5\'ee\par
 public int CalculateAreaRectangle(int a, int b)\par
 \{\par
    return a * b;\par
 \}\par
 public int CalculateAreaSquare(int a)\par
 \{\par
    return a * a;\par
 \}\par
 // \'d5\'ee\'f0\'ee\'f8\'ee\par
  public int CalculateArea(int a, int b)\par
  \{\par
      return a * b;\par
  \}\par
 public int CalculateAreaSquare(int a)\par
 \{\par
     return CalculateArea(a, a);\par
 \}\par
\par
\b\'cf\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec \b0\f2\emdash  \f0\'fd\'f2\'ee \'f1\'e2\'ee\'e9\'f1\'f2\'e2\'ee, \'ea\'ee\'f2\'ee\'f0\'ee\'e5 \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ee\'e4\'e8\'ed \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1 \'e4\'eb\'ff \'ee\'e1\'f9\'e5\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0 \'e4\'e5\'e9\'f1\'f2\'e2\'e8\'e9. 3 \'d2\'ee \'e5\'f1\'f2\'fc \'ee\'e4\'ed\'e0 \'e8 \'f2\'e0 \'e6\'e5 \'f1\'f3\'f9\'ed\'ee\'f1\'f2\'fc (\'ec\'e5\'f2\'ee\'e4, \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'e8\'eb\'e8 \'ee\'e1\'fa\'e5\'ea\'f2) \'ec\'ee\'e6\'e5\'f2 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'f2\'fc \'f0\'e0\'e7\'ed\'fb\'e5 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'e2 \'f0\'e0\'e7\'ed\'fb\'f5 \'f1\'f6\'e5\'ed\'e0\'f0\'e8\'ff\'f5. 2\par
\b\'cf\'f0\'e8\'ec\'e5\'f0\'fb \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec\'e0 \'e2 C#:\b0\par
\'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ec\'e5\'f2\'ee\'e4\'e0. 24 \'c2 \'ea\'eb\'e0\'f1\'f1\'e5 C# \'ec\'ee\'e6\'ed\'ee \'f1\'ee\'e7\'e4\'e0\'e2\'e0\'f2\'fc \'ec\'e5\'f2\'ee\'e4\'fb \'f1 \'f2\'e0\'ea\'e8\'ec \'e6\'e5 \'e8\'ec\'e5\'ed\'e5\'ec, \'e5\'f1\'eb\'e8 \'ee\'ed\'e8 \'e8\'ec\'e5\'fe\'f2 \'f0\'e0\'e7\'ed\'ee\'e5 \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'ee \'e8\'eb\'e8 \'f2\'e8\'ef\'fb \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'ee\'e2. \'cd\'e0\'ef\'f0\'e8\'ec\'e5\'f0, \'ee\'e4\'e8\'ed \'e8 \'f2\'ee\'f2 \'e6\'e5 \'ec\'e5\'f2\'ee\'e4 \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'f2\'fc \'f0\'e0\'e7\'ed\'fb\'e5 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'ed\'e0 \'ee\'f1\'ed\'ee\'e2\'e5 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0.\par
\'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0. \'cd\'e0\'ef\'f0\'e8\'ec\'e5\'f0, \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 + \'ef\'e5\'f0\'e5\'e3\'f0\'f3\'e6\'e5\'ed \'e4\'eb\'ff \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff \'f7\'e8\'f1\'eb\'ee\'e2\'ee\'e3\'ee \'f1\'eb\'ee\'e6\'e5\'ed\'e8\'ff, \'e0 \'f2\'e0\'ea\'e6\'e5 \'ea\'ee\'ed\'ea\'e0\'f2\'e5\'ed\'e0\'f6\'e8\'e8 \'f1\'f2\'f0\'ee\'ea.\par
\'cf\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ec\'e5\'f2\'ee\'e4\'e0. \'c1\'e0\'e7\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 \'ec\'ee\'e6\'e5\'f2 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'f2\'fc \'e8 \'f0\'e5\'e0\'eb\'e8\'e7\'ee\'e2\'fb\'e2\'e0\'f2\'fc \'e2\'e8\'f0\'f2\'f3\'e0\'eb\'fc\'ed\'fb\'e5 \'ec\'e5\'f2\'ee\'e4\'fb, \'e0 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'e5 \'ea\'eb\'e0\'f1\'f1\'fb \f2\emdash  \f0\'ef\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'f2\'fc \'e8\'f5, \'f2\'ee \'e5\'f1\'f2\'fc \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'f2\'fc \'f1\'e2\'ee\'b8 \'f1\'ee\'e1\'f1\'f2\'e2\'e5\'ed\'ed\'ee\'e5 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'e8 \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'fe. \'cd\'e0\'ef\'f0\'e8\'ec\'e5\'f0, \'e1\'e0\'e7\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 Device, \'f3 \'ea\'ee\'f2\'ee\'f0\'ee\'e3\'ee \'e5\'f1\'f2\'fc \'ec\'e5\'f2\'ee\'e4 enabledScreen(). \'cf\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'ec\'e8 \'ea\'eb\'e0\'f1\'f1\'e0\'ec\'e8 \'f3\'f1\'f2\'f0\'ee\'e9\'f1\'f2\'e2 \'ec\'ee\'e3\'f3\'f2 \'e1\'fb\'f2\'fc \'f1\'ec\'e0\'f0\'f2\'f4\'ee\'ed\'fb, \'ef\'eb\'e0\'ed\'f8\'e5\'f2\'fb, \'e8 \'f3 \'ed\'e8\'f5 \'f2\'e0\'ea\'e6\'e5 \'e5\'f1\'f2\'fc \'f1\'ee\'e1\'f1\'f2\'e2\'e5\'ed\'ed\'e0\'ff \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'e2\'fb\'e2\'ee\'e4\'e0 \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'e8 \'ed\'e0 \'fd\'ea\'f0\'e0\'ed.\par
\b\'ce\'f1\'ed\'ee\'e2\'ed\'fb\'e5 \'f4\'ee\'f0\'ec\'fb \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec\'e0:\b0\par
\b\'cf\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec \'ed\'e0 \'ee\'f1\'ed\'ee\'e2\'e5 \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'ff (Subtype Polymorphism):\par
\b0\'d1\'f3\'f2\'fc: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ee\'e1\'f0\'e0\'f9\'e0\'f2\'fc\'f1\'ff \'f1 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\'ec\'e8 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'f5 \'ea\'eb\'e0\'f1\'f1\'ee\'e2 \'f7\'e5\'f0\'e5\'e7 \'f1\'f1\'fb\'eb\'ea\'f3 \'ed\'e0 \'e1\'e0\'e7\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1. \'c2\'fb \'ec\'ee\'e6\'e5\'f2\'e5 \'e2\'fb\'e7\'e2\'e0\'f2\'fc \'ec\'e5\'f2\'ee\'e4, \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'ed\'fb\'e9 \'e2 \'e1\'e0\'e7\'ee\'e2\'ee\'ec \'ea\'eb\'e0\'f1\'f1\'e5, \'e8 \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'e7\'e2\'e0\'ed \'ef\'f0\'e0\'e2\'e8\'eb\'fc\'ed\'fb\'e9 (\'ef\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'ed\'fb\'e9) \'ec\'e5\'f2\'ee\'e4 \'e8\'e7 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0.\par
\b\'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'ed\'e0\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'ed\'e8\'e5 (: \'e2 C#) \'e8 \'ef\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 (override) \'ec\'e5\'f2\'ee\'e4\'ee\'e2.\b0\par
\'cf\'f0\'e8\'ec\'e5\'f0 (C#):\par
// \'c1\'e0\'e7\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1\par
public class Shape\par
\{\par
    public virtual void Draw() // \'cc\'e5\'f2\'ee\'e4 \'f1 virtual \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ef\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'f2\'fc \'e2 \'e4\'ee\'f7\'e5\'f0\'ed\'e8\'f5\par
    \{\par
        Console.WriteLine("Drawing a shape.");\par
    \}\par
\}\par
// \'cf\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'e5 \'ea\'eb\'e0\'f1\'f1\'fb\par
public class Circle : Shape\par
\{\par
    public override void Draw() // \'cf\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ec\'e5\'f2\'ee\'e4\'e0\par
    \{\par
        Console.WriteLine("Drawing a circle.");\par
    \}\par
\}\par
public class Square : Shape\par
\{\par
    public override void Draw() // \'cf\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ec\'e5\'f2\'ee\'e4\'e0\par
    \{\par
        Console.WriteLine("Drawing a square.");\par
    \}\par
\}\par
public class PolymorphismExample\par
\{\par
    public static void DrawShapes()\par
    \{\par
        // \'cc\'e0\'f1\'f1\'e8\'e2 \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'e2 \'e1\'e0\'e7\'ee\'e2\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'f1\'e0, \'f1\'ee\'e4\'e5\'f0\'e6\'e0\'f9\'e8\'f5 \'fd\'ea\'e7\'e5\'ec\'ef\'eb\'ff\'f0\'fb \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'f5\par
        Shape[] shapes = \{ new Circle(), new Square(), new Shape() \};\par
        foreach (Shape shape in shapes)\par
        \{\par
            shape.Draw(); // \'c2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ea\'ee\'ed\'ea\'f0\'e5\'f2\'ed\'e0\'ff \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff Draw() \'e2 \'e7\'e0\'e2\'e8\'f1\'e8\'ec\'ee\'f1\'f2\'e8 \'ee\'f2 \'f2\'e8\'ef\'e0 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\par
        \}\par
    \}\par
\}\par
// Output:\par
// Drawing a circle.\par
// Drawing a square.\par
// Drawing a shape.\par
\b\'ce\'e1\'fa\'ff\'f1\'ed\'e5\'ed\'e8\'e5:\b0\par
\'d3 \'ed\'e0\'f1 \'e5\'f1\'f2\'fc \'e1\'e0\'e7\'ee\'e2\'fb\'e9 \'ea\'eb\'e0\'f1\'f1 Shape \'e8 \'e4\'e2\'e0 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'f5 \'ea\'eb\'e0\'f1\'f1\'e0 Circle \'e8 Square.\par
\'cc\'e5\'f2\'ee\'e4 Draw() \'ef\'ee\'ec\'e5\'f7\'e5\'ed \'ea\'e0\'ea virtual \'e2 \'e1\'e0\'e7\'ee\'e2\'ee\'ec \'ea\'eb\'e0\'f1\'f1\'e5, \'f7\'f2\'ee \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ef\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'f2\'fc \'e5\'e3\'ee \'e2 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'ed\'fb\'f5 \'ea\'eb\'e0\'f1\'f1\'e0\'f5 \'f1 \'ef\'ee\'ec\'ee\'f9\'fc\'fe \'ea\'eb\'fe\'f7\'e5\'e2\'ee\'e3\'ee \'f1\'eb\'ee\'e2\'e0 override.\par
\'cc\'e0\'f1\'f1\'e8\'e2 shapes \'f2\'e8\'ef\'e0 Shape \'ec\'ee\'e6\'e5\'f2 \'f1\'ee\'e4\'e5\'f0\'e6\'e0\'f2\'fc \'fd\'ea\'e7\'e5\'ec\'ef\'eb\'ff\'f0\'fb Circle, Square \'e8 Shape.\par
\'c2 \'f6\'e8\'ea\'eb\'e5 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ec\'e5\'f2\'ee\'e4 Draw() \'e4\'eb\'ff \'ea\'e0\'e6\'e4\'ee\'e3\'ee \'ee\'e1\'fa\'e5\'ea\'f2\'e0. \'c1\'eb\'e0\'e3\'ee\'e4\'e0\'f0\'ff \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec\'f3 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'e8\'ec\'e5\'ed\'ed\'ee \'f2\'ee\'f2 \'ec\'e5\'f2\'ee\'e4 Draw(), \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed \'e2 \'f4\'e0\'ea\'f2\'e8\'f7\'e5\'f1\'ea\'ee\'ec \'f2\'e8\'ef\'e5 \'ee\'e1\'fa\'e5\'ea\'f2\'e0. \'dd\'f2\'ee \'ed\'e0\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8\'ec \'f1\'e2\'ff\'e7\'fb\'e2\'e0\'ed\'e8\'e5\'ec (dynamic binding).\par
\b\'cf\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec \'ed\'e0 \'ee\'f1\'ed\'ee\'e2\'e5 \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1\'ee\'e2 (Interface Polymorphism):\b0\par
\'d1\'f3\'f2\'fc: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ee\'e1\'f0\'e0\'e1\'e0\'f2\'fb\'e2\'e0\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'f0\'e0\'e7\'ed\'fb\'f5 \'ea\'eb\'e0\'f1\'f1\'ee\'e2 \'e5\'e4\'e8\'ed\'ee\'ee\'e1\'f0\'e0\'e7\'ed\'ee, \'e5\'f1\'eb\'e8 \'ee\'ed\'e8 \'f0\'e5\'e0\'eb\'e8\'e7\'f3\'fe\'f2 \'ee\'e4\'e8\'ed \'e8 \'f2\'ee\'f2 \'e6\'e5 \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1.\par
\b\'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'ea\'eb\'fe\'f7\'e5\'e2\'ee\'e5 \'f1\'eb\'ee\'e2\'ee interface \'e2 C#.\par
\b0\'cf\'f0\'e8\'ec\'e5\'f0 (C#):\par
// \'c8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1\par
public interface ILogger\par
\{\par
    void Log(string message);\par
\}\par
// \'ca\'eb\'e0\'f1\'f1\'fb, \'f0\'e5\'e0\'eb\'e8\'e7\'f3\'fe\'f9\'e8\'e5 \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1\par
public class FileLogger : ILogger\par
\{\par
    public void Log(string message)\par
    \{\par
        Console.WriteLine($"File log: \{message\}");\par
    \}\par
\}\par
public class ConsoleLogger : ILogger\par
\{\par
    public void Log(string message)\par
    \{\par
        Console.WriteLine($"Console log: \{message\}");\par
    \}\par
\}\par
public class InterfacePolymorphismExample\par
\{\par
    public static void LogMessage(ILogger logger, string message)\par
    \{\par
        logger.Log(message); // \'c2\'fb\'e7\'ee\'e2 \'ec\'e5\'f2\'ee\'e4\'e0 Log() \'e2 \'e7\'e0\'e2\'e8\'f1\'e8\'ec\'ee\'f1\'f2\'e8 \'ee\'f2 \'f2\'e8\'ef\'e0 logger\par
    \}\par
\par
    public static void Main(string[] args)\par
    \{\par
        ILogger fileLogger = new FileLogger();\par
        ILogger consoleLogger = new ConsoleLogger();\par
\par
        LogMessage(fileLogger, "Test message 1"); // \'c2\'fb\'e2\'e5\'e4\'e5\'f2: File log: Test message 1\par
        LogMessage(consoleLogger, "Test message 2"); // \'c2\'fb\'e2\'e5\'e4\'e5\'f2: Console log: Test message 2\par
    \}\par
\}\par
\b\'ce\'e1\'fa\'ff\'f1\'ed\'e5\'ed\'e8\'e5:\b0\par
\'d3 \'ed\'e0\'f1 \'e5\'f1\'f2\'fc \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1 ILogger \'f1 \'ec\'e5\'f2\'ee\'e4\'ee\'ec Log.\par
\'c4\'e2\'e0 \'ea\'eb\'e0\'f1\'f1\'e0 (FileLogger \'e8 ConsoleLogger) \'f0\'e5\'e0\'eb\'e8\'e7\'f3\'fe\'f2 \'fd\'f2\'ee\'f2 \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1, \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'ff \'f1\'e2\'ee\'fe \'f1\'ee\'e1\'f1\'f2\'e2\'e5\'ed\'ed\'f3\'fe \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'fe Log.\par
\'cc\'e5\'f2\'ee\'e4 LogMessage \'ef\'f0\'e8\'ed\'e8\'ec\'e0\'e5\'f2 \'ee\'e1\'fa\'e5\'ea\'f2 \'f2\'e8\'ef\'e0 ILogger \'ea\'e0\'ea \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0 \'e8 \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2 \'ec\'e5\'f2\'ee\'e4 Log().\par
\'c1\'eb\'e0\'e3\'ee\'e4\'e0\'f0\'ff \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec\'f3, \'ec\'ee\'e6\'ed\'ee \'ef\'e5\'f0\'e5\'e4\'e0\'e2\'e0\'f2\'fc \'eb\'fe\'e1\'ee\'e9 \'ee\'e1\'fa\'e5\'ea\'f2, \'f0\'e5\'e0\'eb\'e8\'e7\'f3\'fe\'f9\'e8\'e9 ILogger, \'e8 \'e1\'f3\'e4\'e5\'f2 \'e2\'fb\'e7\'e2\'e0\'ed\'e0 \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'fe\'f9\'e0\'ff \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ec\'e5\'f2\'ee\'e4\'e0 Log().\par
\b\'cf\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'ee\'e2 (Ad-hoc Polymorphism, Overloading):\b0\par
\'d1\'f3\'f2\'fc: \'c2\'ee\'e7\'ec\'ee\'e6\'ed\'ee\'f1\'f2\'fc \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'ff \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'e8\'f5 \'ec\'e5\'f2\'ee\'e4\'ee\'e2 \'f1 \'ee\'e4\'ed\'e8\'ec \'e8\'ec\'e5\'ed\'e5\'ec \'e2 \'ee\'e4\'ed\'ee\'ec \'ea\'eb\'e0\'f1\'f1\'e5, \'ed\'ee \'f1 \'f0\'e0\'e7\'ed\'fb\'ec\'e8 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0\'ec\'e8 (\'f0\'e0\'e7\'ed\'fb\'ec \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'ee\'ec, \'f2\'e8\'ef\'e0\'ec\'e8 \'e8\'eb\'e8 \'ef\'ee\'f0\'ff\'e4\'ea\'ee\'ec).\par
\b\'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ec\'e5\'f2\'ee\'e4\'ee\'e2 (method overloading)\b0\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 (C#):\b0\par
public class Calculator\par
\{\par
  public int Add(int a, int b)\par
  \{\par
    return a + b;\par
  \}\par
  public double Add(double a, double b)\par
  \{\par
     return a + b;\par
  \}\par
  public int Add(int a, int b, int c)\par
  \{\par
     return a + b + c;\par
  \}\par
\}\par
   public class OverloadingExample\par
   \{\par
     public static void Main(string[] args)\par
     \{\par
       Calculator calc = new Calculator();\par
       Console.WriteLine(calc.Add(1, 2));      // \'c2\'fb\'e7\'ee\'e2\'e5\'f2 int Add(int, int)\par
       Console.WriteLine(calc.Add(1.5, 2.5)); // \'c2\'fb\'e7\'ee\'e2\'e5\'f2 double Add(double, double)\par
       Console.WriteLine(calc.Add(1, 2, 3));  // \'c2\'fb\'e7\'ee\'e2\'e5\'f2 int Add(int, int, int)\par
     \}\par
   \}\par
___\par
\b\'d0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \'ea\'ee\'e4\'e0\b0\par
\b\'d0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3 \'ea\'ee\'e4\'e0 \b0\f2\emdash  \f0\'fd\'f2\'ee \'ef\'f0\'ee\'f6\'e5\'f1\'f1 \'f3\'eb\'f3\'f7\'f8\'e5\'ed\'e8\'ff \'e2\'ed\'f3\'f2\'f0\'e5\'ed\'ed\'e5\'e9 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'fb \'ea\'ee\'e4\'e0 \'e1\'e5\'e7 \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'ff \'e5\'e3\'ee \'e2\'ed\'e5\'f8\'ed\'e5\'e3\'ee \'ef\'ee\'e2\'e5\'e4\'e5\'ed\'e8\'ff. \'d6\'e5\'eb\'fc \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0 \f2\emdash  \f0\'f1\'e4\'e5\'eb\'e0\'f2\'fc \'ea\'ee\'e4 \'e1\'ee\'eb\'e5\'e5 \'f7\'e8\'f2\'e0\'e5\'ec\'fb\'ec, \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'ec\'fb\'ec \'e8 \'f0\'e0\'f1\'f8\'e8\'f0\'ff\'e5\'ec\'fb\'ec.\par
\b\'d6\'e5\'eb\'e8 \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0\b0\par
\'d3\'eb\'f3\'f7\'f8\'e5\'ed\'e8\'e5 \'f7\'e8\'f2\'e0\'e5\'ec\'ee\'f1\'f2\'e8: \'d1\'e4\'e5\'eb\'e0\'f2\'fc \'ea\'ee\'e4 \'e1\'ee\'eb\'e5\'e5 \'ef\'ee\'ed\'ff\'f2\'ed\'fb\'ec \'e4\'eb\'ff \'f0\'e0\'e7\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'ee\'e2, \'f7\'f2\'ee \'ee\'e1\'eb\'e5\'e3\'f7\'e0\'e5\'f2 \'e5\'e3\'ee \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'ea\'f3 \'e8 \'f0\'e0\'e7\'e2\'e8\'f2\'e8\'e5.\par
\'d3\'ec\'e5\'ed\'fc\'f8\'e5\'ed\'e8\'e5 \'f1\'eb\'ee\'e6\'ed\'ee\'f1\'f2\'e8: \'d3\'ef\'f0\'ee\'f1\'f2\'e8\'f2\'fc \'f1\'eb\'ee\'e6\'ed\'fb\'e5 \'f3\'f7\'e0\'f1\'f2\'ea\'e8 \'ea\'ee\'e4\'e0, \'f7\'f2\'ee\'e1\'fb \'f3\'ec\'e5\'ed\'fc\'f8\'e8\'f2\'fc \'e2\'e5\'f0\'ee\'ff\'f2\'ed\'ee\'f1\'f2\'fc \'ee\'f8\'e8\'e1\'ee\'ea \'e8 \'ee\'e1\'eb\'e5\'e3\'f7\'e8\'f2\'fc \'e2\'ed\'e5\'f1\'e5\'ed\'e8\'e5 \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'e9.\par
\'cf\'ee\'e2\'fb\'f8\'e5\'ed\'e8\'e5 \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'ed\'ee\'f1\'f2\'e8: \'ce\'ef\'f2\'e8\'ec\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'ea\'ee\'e4 \'e4\'eb\'ff \'f3\'eb\'f3\'f7\'f8\'e5\'ed\'e8\'ff \'e5\'e3\'ee \'ef\'f0\'ee\'e8\'e7\'e2\'ee\'e4\'e8\'f2\'e5\'eb\'fc\'ed\'ee\'f1\'f2\'e8.\par
\'cf\'ee\'e2\'fb\'f8\'e5\'ed\'e8\'e5 \'ef\'ee\'e2\'f2\'ee\'f0\'ed\'ee\'e3\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff: \'c2\'fb\'e4\'e5\'eb\'e8\'f2\'fc \'ee\'e1\'f9\'e8\'e5 \'f7\'e0\'f1\'f2\'e8 \'ea\'ee\'e4\'e0 \'e2 \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'fb\'e5 \'ec\'e5\'f2\'ee\'e4\'fb \'e8\'eb\'e8 \'ea\'eb\'e0\'f1\'f1\'fb \'e4\'eb\'ff \'e8\'f5 \'ef\'ee\'e2\'f2\'ee\'f0\'ed\'ee\'e3\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff.\par
\'d3\'eb\'f3\'f7\'f8\'e5\'ed\'e8\'e5 \'f2\'e5\'f1\'f2\'e8\'f0\'f3\'e5\'ec\'ee\'f1\'f2\'e8: \'d1\'e4\'e5\'eb\'e0\'f2\'fc \'ea\'ee\'e4 \'e1\'ee\'eb\'e5\'e5 \'ec\'ee\'e4\'f3\'eb\'fc\'ed\'fb\'ec \'e8 \'e8\'e7\'ee\'eb\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'ec, \'f7\'f2\'ee\'e1\'fb \'ee\'e1\'eb\'e5\'e3\'f7\'e8\'f2\'fc \'e5\'e3\'ee \'f2\'e5\'f1\'f2\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e5.\par
\b\'cf\'f0\'e8\'ec\'e5\'f0\'fb \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0\par
\'cf\'f0\'e8\'ec\'e5\'f0 1: \'c8\'e7\'e2\'eb\'e5\'f7\'e5\'ed\'e8\'e5 \'ec\'e5\'f2\'ee\'e4\'e0 \par
\'c4\'ee \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0:\par
\b0 public void ProcessData()\par
\{\par
    // \'d7\'f2\'e5\'ed\'e8\'e5 \'e4\'e0\'ed\'ed\'fb\'f5 \'e8\'e7 \'f4\'e0\'e9\'eb\'e0\par
    string data = File.ReadAllText("data.txt");\par
    // \'ce\'e1\'f0\'e0\'e1\'ee\'f2\'ea\'e0 \'e4\'e0\'ed\'ed\'fb\'f5\par
    string[] lines = data.Split('\\n');\par
    foreach (string line in lines)\par
    \{\par
        Console.WriteLine(line);\par
    \}\par
\}\par
\b\'cf\'ee\'f1\'eb\'e5 \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0:\b0\par
public void ProcessData()\par
\{\par
    string data = ReadDataFromFile("data.txt");\par
    ProcessLines(data);\par
\}\par
private string ReadDataFromFile(string filePath)\par
\{\par
    return File.ReadAllText(filePath);\par
\}\par
private void ProcessLines(string data)\par
\{\par
    string[] lines = data.Split('\\n');\par
    foreach (string line in lines)\par
    \{\par
        Console.WriteLine(line);\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 2: \'c7\'e0\'ec\'e5\'ed\'e0 \'ec\'e0\'e3\'e8\'f7\'e5\'f1\'ea\'e8\'f5 \'f7\'e8\'f1\'e5\'eb \'ea\'ee\'ed\'f1\'f2\'e0\'ed\'f2\'e0\'ec\'e8 \par
\'c4\'ee \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0:\b0\par
public double CalculateCircleArea(double radius)\par
\{\par
    return 3.14159 * radius * radius;\par
\}\par
\b\'cf\'ee\'f1\'eb\'e5 \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0:\b0\par
public double CalculateCircleArea(double radius)\par
\{\par
    const double Pi = 3.14159;\par
    return Pi * radius * radius;\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 3: \'c7\'e0\'ec\'e5\'ed\'e0 \'e4\'f3\'e1\'eb\'e8\'f0\'f3\'fe\'f9\'e5\'e3\'ee\'f1\'ff \'ea\'ee\'e4\'e0 \par
\'c4\'ee \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0:\b0\par
public void PrintUserDetails(User user)\par
\{\par
    Console.WriteLine("Name: " + user.Name);\par
    Console.WriteLine("Email: " + user.Email);\par
    Console.WriteLine("Phone: " + user.Phone);\par
\}\par
public void PrintAdminDetails(Admin admin)\par
\{\par
    Console.WriteLine("Name: " + admin.Name);\par
    Console.WriteLine("Email: " + admin.Email);\par
    Console.WriteLine("Phone: " + admin.Phone);\par
\}\par
\b\'cf\'ee\'f1\'eb\'e5 \'f0\'e5\'f4\'e0\'ea\'f2\'ee\'f0\'e8\'ed\'e3\'e0:\b0\par
public void PrintDetails(Person person)\par
\{\par
    Console.WriteLine("Name: " + person.Name);\par
    Console.WriteLine("Email: " + person.Email);\par
    Console.WriteLine("Phone: " + person.Phone);\par
\f1\lang1033\}\par
\par
\b\f0\lang1049\'cf\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec \'e2 C#\b0\par
\b\'cf\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec \b0\f2\emdash  \f0\'fd\'f2\'ee \'ee\'e4\'e8\'ed \'e8\'e7 \'ea\'eb\'fe\'f7\'e5\'e2\'fb\'f5 \'ef\'f0\'e8\'ed\'f6\'e8\'ef\'ee\'e2 \'ee\'e1\'fa\'e5\'ea\'f2\'ed\'ee-\'ee\'f0\'e8\'e5\'ed\'f2\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'ee\'e3\'ee \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff (\'ce\'ce\'cf), \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ee\'e1\'fa\'e5\'ea\'f2\'e0\'ec \'f0\'e0\'e7\'ed\'fb\'f5 \'ea\'eb\'e0\'f1\'f1\'ee\'e2 \'ee\'e1\'f0\'e0\'e1\'e0\'f2\'fb\'e2\'e0\'f2\'fc \'e4\'e0\'ed\'ed\'fb\'e5 \'f7\'e5\'f0\'e5\'e7 \'ee\'e4\'e8\'ed \'e8 \'f2\'ee\'f2 \'e6\'e5 \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1. \'cf\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec \'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'e5\'f2 \'e3\'e8\'e1\'ea\'ee\'f1\'f2\'fc \'e8 \'f0\'e0\'f1\'f8\'e8\'f0\'ff\'e5\'ec\'ee\'f1\'f2\'fc \'ea\'ee\'e4\'e0, \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'ff \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ee\'e1\'fa\'e5\'ea\'f2\'fb \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'f5 \'f2\'e8\'ef\'ee\'e2 \'e5\'e4\'e8\'ed\'ee\'ee\'e1\'f0\'e0\'e7\'ed\'ee.\par
\b\'c2\'e8\'e4\'fb \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec\'e0\par
\'ca\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'ee\'ed\'ed\'fb\'e9 \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec (\'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8\'e9 \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec):\par
\b0\'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ec\'e5\'f2\'ee\'e4\'ee\'e2: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'f1\'ee\'e7\'e4\'e0\'e2\'e0\'f2\'fc \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'ec\'e5\'f2\'ee\'e4\'ee\'e2 \'f1 \'ee\'e4\'ed\'e8\'ec \'e8 \'f2\'e5\'ec \'e6\'e5 \'e8\'ec\'e5\'ed\'e5\'ec, \'ed\'ee \'f1 \'f0\'e0\'e7\'ed\'fb\'ec\'e8 \'ef\'e0\'f0\'e0\'ec\'e5\'f2\'f0\'e0\'ec\'e8.\par
\'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'f2\'fc \'ed\'ee\'e2\'fb\'e5 \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ed\'fb\'f5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2 \'e4\'eb\'ff \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'f5 \'f2\'e8\'ef\'ee\'e2.\par
\'c8\'f1\'ef\'ee\'eb\'ed\'e8\'f2\'e5\'eb\'fc\'ed\'fb\'e9 \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec (\'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8\'e9 \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec):\par
\'cf\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ec\'e5\'f2\'ee\'e4\'ee\'e2: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ef\'ee\'e4\'ea\'eb\'e0\'f1\'f1\'e0\'ec \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'f2\'fc \'ea\'ee\'ed\'ea\'f0\'e5\'f2\'ed\'fb\'e5 \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'ec\'e5\'f2\'ee\'e4\'ee\'e2, \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'ed\'fb\'f5 \'e2 \'e1\'e0\'e7\'ee\'e2\'ee\'ec \'ea\'eb\'e0\'f1\'f1\'e5.\par
\'c8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1\'fb: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f2 \'ea\'eb\'e0\'f1\'f1\'e0\'ec \'f0\'e5\'e0\'eb\'e8\'e7\'ee\'e2\'fb\'e2\'e0\'f2\'fc \'ee\'e4\'e8\'ed \'e8\'eb\'e8 \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1\'ee\'e2 \'e8 \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'f2\'fc \'ea\'ee\'ed\'ea\'f0\'e5\'f2\'ed\'fb\'e5 \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'e8\'f5 \'ec\'e5\'f2\'ee\'e4\'ee\'e2.\par
\b\'cf\'f0\'e8\'ec\'e5\'f0\'fb \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec\'e0\par
\'cf\'f0\'e8\'ec\'e5\'f0 1: \'cf\'e5\'f0\'e5\'e3\'f0\'f3\'e7\'ea\'e0 \'ec\'e5\'f2\'ee\'e4\'ee\'e2 (\'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8\'e9 \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec)\par
\b0 public class MathOperations\par
\{\par
    public int Add(int a, int b)\par
    \{\par
        return a + b;\par
    \}\par
    public double Add(double a, double b)\par
    \{\par
        return a + b;\par
    \}\par
\}\par
class Program\par
\{\par
    static void Main()\par
    \{\par
        MathOperations math = new MathOperations();\par
        Console.WriteLine(math.Add(2, 3)); // Output: 5\par
        Console.WriteLine(math.Add(2.5, 3.5)); // Output: 6.0\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 2: \'cf\'e5\'f0\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ec\'e5\'f2\'ee\'e4\'ee\'e2 (\'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8\'e9 \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec)\b0\par
public class Animal\par
\{\par
    public virtual void MakeSound()\par
    \{\par
        Console.WriteLine("Some generic animal sound");\par
    \}\par
\}\par
public class Dog : Animal\par
\{\par
    public override void MakeSound()\par
    \{\par
        Console.WriteLine("Bark");\par
    \}\par
\}\par
public class Cat : Animal\par
\{\par
    public override void MakeSound()\par
    \{\par
        Console.WriteLine("Meow");\par
    \}\par
\}\par
class Program\par
\{\par
    static void Main()\par
    \{\par
        Animal myDog = new Dog();\par
        Animal myCat = new Cat();\par
        myDog.MakeSound(); // Output: Bark\par
        myCat.MakeSound(); // Output: Meow\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 3: \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5 \'e8\'ed\'f2\'e5\'f0\'f4\'e5\'e9\'f1\'ee\'e2 (\'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8\'e9 \'ef\'ee\'eb\'e8\'ec\'ee\'f0\'f4\'e8\'e7\'ec)\b0\par
public interface IShape\par
\{\par
    double GetArea();\par
\}\par
public class Circle : IShape\par
\{\par
    public double Radius \{ get; set; \}\par
\par
    public Circle(double radius)\par
    \{\par
        Radius = radius;\par
    \}\par
    public double GetArea()\par
    \{\par
        return Math.PI * Radius * Radius;\par
    \}\par
\}\par
public class Rectangle : IShape\par
\{\par
    public double Width \{ get; set; \}\par
    public double Height \{ get; set; \}\par
    public Rectangle(double width, double height)\par
    \{\par
        Width = width;\par
        Height = height;\par
    \}\par
    public double GetArea()\par
    \{\par
        return Width * Height;\par
    \}\par
\}\par
class Program\par
\{\par
    static void Main()\par
    \{\par
        IShape circle = new Circle(5);\par
        IShape rectangle = new Rectangle(4, 6);\par
        Console.WriteLine($"Area of circle: \{circle.GetArea()\}"); // Output: Area of circle: 78.53981633974483\par
        Console.WriteLine($"Area of rectangle: \{rectangle.GetArea()\}"); // Output: Area of rectangle: 24\par
    \}\par
\}\b\i\f1\lang9\par
}
 