{\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset204 Calibri;}{\f2\fnil Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\i\f0\fs22\lang9 C\f1\lang1049\'ef\'e8\'f1\'ea\'e8: \'ef\'ee\'ed\'ff\'f2\'e8\'e5, \'ef\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5, \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'ed\'e0\'e4 \'f1\'ef\'e8\'f1\'ea\'e0\'ec\'e8, \'ef\'f0\'e8\'ec\'e5\'f0\'fb.\par
\'d0\'e0\'e1\'ee\'f2\'e0 \'f1 \'f4\'e0\'e9\'eb\'e0\'ec\'e8: \'f7\'f2\'e5\'ed\'e8\'e5 \'e8 \'e7\'e0\'ef\'e8\'f1\'fc \'e2 \'f4\'e0\'e9\'eb\'fb.\par
\'cd\'e0\'ef\'e8\'f8\'e8\'f2\'e5 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'f3, \'ea\'ee\'f2\'ee\'f0\'e0\'ff \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'f2 \'e4\'e2\'e0 \'ec\'e5\'f2\'ee\'e4\'e0 Power: \'ee\'e4\'e8\'ed \'e2\'ee\'e7\'e2\'ee\'e4\'e8\'f2 \'f6\'e5\'eb\'ee\'e5 \'f7\'e8\'f1\'eb\'ee \'e2 \'ea\'e2\'e0\'e4\'f0\'e0\'f2, \'e4\'f0\'f3\'e3\'ee\'e9 - \'f7\'e8\'f1\'eb\'ee \'f1 \'ef\'eb\'e0\'e2\'e0\'fe\'f9\'e5\'e9 \'f2\'ee\'f7\'ea\'ee\'e9 \'e2 \'ea\'f3\'e1. \'c2\'fb\'e7\'ee\'e2\'e8\'f2\'e5 \'ee\'e1\'e0 \'ec\'e5\'f2\'ee\'e4\'e0 \'f1 \'f0\'e0\'e7\'ed\'fb\'ec\'e8 \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2\'e0\'ec\'e8 \'e8 \'e2\'fb\'e2\'e5\'e4\'e8\'f2\'e5 \'f0\'e5\'e7\'f3\'eb\'fc\'f2\'e0\'f2\'fb\f0\lang1033 .\f1\lang1049\par
\par
\b0\i0\'d1\'ef\'e8\'f1\'ee\'ea \'e2 C# \f2\emdash  \f1\'fd\'f2\'ee \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e0\'ff \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e0 \'e4\'e0\'ed\'ed\'fb\'f5, \'ea\'ee\'f2\'ee\'f0\'e0\'ff \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'fe \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'ee\'e4\'ed\'ee\'e3\'ee \'f2\'e8\'ef\'e0. \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'e4\'ee\'e1\'e0\'e2\'eb\'ff\'f2\'fc, \'f3\'e4\'e0\'eb\'ff\'f2\'fc \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'e8 \'ef\'ee\'eb\'f3\'f7\'e0\'f2\'fc \'ea \'ed\'e8\'ec \'e4\'ee\'f1\'f2\'f3\'ef \'ef\'ee \'e8\'ed\'e4\'e5\'ea\'f1\'f3.\par
\b\'ce\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'ed\'e0\'e4 \'f1\'ef\'e8\'f1\'ea\'e0\'ec\'e8:\b0\par
\'d1\'ee\'e7\'e4\'e0\'ed\'e8\'e5 \'f1\'ef\'e8\'f1\'ea\'e0. \'c4\'eb\'ff \'fd\'f2\'ee\'e3\'ee \'ed\'f3\'e6\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ea\'eb\'e0\'f1\'f1 List<> , \'e3\'e4\'e5 T \f2\emdash  \f1\'f2\'e8\'ef \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ed\'f3\'e6\'ed\'ee \'f5\'f0\'e0\'ed\'e8\'f2\'fc \'e2 \'f1\'ef\'e8\'f1\'ea\'e5. \'cf\'f0\'e8\'ec\'e5\'f0: List<int> numbers = new List<int>(); \f2\emdash  \f1\'f1\'ee\'e7\'e4\'e0\'ed\'e8\'e5 \'ef\'f3\'f1\'f2\'ee\'e3\'ee \'f1\'ef\'e8\'f1\'ea\'e0 \'f6\'e5\'eb\'fb\'f5 \'f7\'e8\'f1\'e5\'eb.\par
\'c4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2. \'c4\'eb\'ff \'fd\'f2\'ee\'e3\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'ec\'e5\'f2\'ee\'e4 Add(). \'cf\'f0\'e8\'ec\'e5\'f0: numbers.Add(10); \f2\emdash  \f1\'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'e5 \'f7\'e8\'f1\'eb\'e0 10 \'e2 \'f1\'ef\'e8\'f1\'ee\'ea, numbers.Add(20); \f2\emdash  \f1\'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'e5 \'f7\'e8\'f1\'eb\'e0 20 \'e2 \'f1\'ef\'e8\'f1\'ee\'ea.\par
\'c4\'ee\'f1\'f2\'f3\'ef \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec. \'c4\'eb\'ff \'e4\'ee\'f1\'f2\'f3\'ef\'e0 \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec \'f1\'ef\'e8\'f1\'ea\'e0 \'ec\'ee\'e6\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'e8\'ed\'e4\'e5\'ea\'f1\'e0\'f6\'e8\'fe, \'ed\'e0\'f7\'e8\'ed\'e0\'fe\'f9\'f3\'fe\'f1\'ff \'f1 \'ed\'f3\'eb\'ff. 1 \'cf\'f0\'e8\'ec\'e5\'f0: int firstNumber = numbers; [0] \f2\emdash  \f1\'e4\'ee\'f1\'f2\'f3\'ef \'ea \'ef\'e5\'f0\'e2\'ee\'ec\'f3 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'f3 (10), int secondNumber = numbers; \f2\emdash  \f1\'e4\'ee\'f1\'f2\'f3\'ef \'ea \'e2\'f2\'ee\'f0\'ee\'ec\'f3 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'f3 (20).\par
\'d3\'e4\'e0\'eb\'e5\'ed\'e8\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2. \'c4\'eb\'ff \'f3\'e4\'e0\'eb\'e5\'ed\'e8\'ff \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 \'e8\'e7 \'f1\'ef\'e8\'f1\'ea\'e0 \'ec\'ee\'e6\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ec\'e5\'f2\'ee\'e4 Remove(). \'cf\'f0\'e8\'ec\'e5\'f0: numbers.Remove(10); \f2\emdash  \f1\'f3\'e4\'e0\'eb\'e5\'ed\'e8\'e5 \'f7\'e8\'f1\'eb\'e0 10 \'e8\'e7 \'f1\'ef\'e8\'f1\'ea\'e0.\par
\'cf\'f0\'ee\'e2\'e5\'f0\'ea\'e0 \'ed\'e0\'eb\'e8\'f7\'e8\'ff \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0. \'c4\'eb\'ff \'ef\'f0\'ee\'e2\'e5\'f0\'ea\'e8, \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'f2 \'eb\'e8 \'f1\'ef\'e8\'f1\'ee\'ea \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'b8\'ed\'ed\'fb\'e9 \'fd\'eb\'e5\'ec\'e5\'ed\'f2, \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'ec\'e5\'f2\'ee\'e4 Contains(). \'cf\'f0\'e8\'ec\'e5\'f0: bool containsTwenty = numbers.Contains(20); \f2\emdash  \f1\'ef\'f0\'ee\'e2\'e5\'f0\'ea\'e0, \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'f2 \'eb\'e8 \'f1\'ef\'e8\'f1\'ee\'ea \'f7\'e8\'f1\'eb\'ee 20.\par
\'c8\'f2\'e5\'f0\'e0\'f6\'e8\'ff \'ef\'ee \'f1\'ef\'e8\'f1\'ea\'f3. \'c4\'eb\'ff \'e8\'f2\'e5\'f0\'e0\'f6\'e8\'e8 \'ef\'ee \'e2\'f1\'e5\'ec \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec \'f1\'ef\'e8\'f1\'ea\'e0 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'f6\'e8\'ea\'eb foreach. \'cf\'f0\'e8\'ec\'e5\'f0: foreach (int number in numbers) \{ Console.WriteLine(number); \}.\par
\b\'cf\'f0\'e8\'ec\'e5\'f0\'fb \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff:\b0\par
using System;\par
using System.Collections.Generic;\par
public class Example\par
\{\par
    public static void Main(string[] args)\par
    \{\par
        // \'cf\'f0\'e8\'ec\'e5\'f0 1: \'d1\'ef\'e8\'f1\'ee\'ea \'f1\'f2\'f0\'ee\'ea\par
        List<string> fruits = new List<string>() \{ "\'df\'e1\'eb\'ee\'ea\'ee", "\'c1\'e0\'ed\'e0\'ed", "\'c0\'ef\'e5\'eb\'fc\'f1\'e8\'ed" \};\par
        fruits.Add("\'cc\'e0\'ed\'e3\'ee");\par
        fruits.Insert(1, "\'c2\'e8\'f8\'ed\'ff"); // "\'c2\'e8\'f8\'ed\'ff" \'e2\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ef\'ee\'f1\'eb\'e5 "\'df\'e1\'eb\'ee\'ea\'ee"\par
        fruits.Remove("\'c1\'e0\'ed\'e0\'ed"); // \'d3\'e4\'e0\'eb\'ff\'e5\'ec "\'c1\'e0\'ed\'e0\'ed"\par
         Console.WriteLine("\'d1\'ef\'e8\'f1\'ee\'ea \'f4\'f0\'f3\'ea\'f2\'ee\'e2:");\par
        foreach (string fruit in fruits)\par
        \{\par
            Console.WriteLine(fruit); // Output: \'d1\'ef\'e8\'f1\'ee\'ea \'f4\'f0\'f3\'ea\'f2\'ee\'e2:\par
                                      //        \'df\'e1\'eb\'ee\'ea\'ee\par
                                      //        \'c2\'e8\'f8\'ed\'ff\par
                                      //        \'c0\'ef\'e5\'eb\'fc\'f1\'e8\'ed\par
                                      //        \'cc\'e0\'ed\'e3\'ee\par
        \}\par
        // \'cf\'f0\'e8\'ec\'e5\'f0 2: \'d1\'ef\'e8\'f1\'ee\'ea \'f7\'e8\'f1\'e5\'eb\par
        List<int> numbers = new List<int>() \{ 10, 5, 25, 15, 30 \};\par
        numbers.Sort(); // \'d1\'ee\'f0\'f2\'e8\'f0\'ee\'e2\'ea\'e0 \'ef\'ee \'e2\'ee\'e7\'f0\'e0\'f1\'f2\'e0\'ed\'e8\'fe\par
        Console.WriteLine("\\n\'d1\'ef\'e8\'f1\'ee\'ea \'f7\'e8\'f1\'e5\'eb (\'f1\'ee\'f0\'f2\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e9):");\par
        foreach (int num in numbers)\par
        \{\par
            Console.WriteLine(num); // Output: \'d1\'ef\'e8\'f1\'ee\'ea \'f7\'e8\'f1\'e5\'eb (\'f1\'ee\'f0\'f2\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e9):\par
                                    //        5\par
                                    //        10\par
                                    //        15\par
                                    //        25\par
                                    //        30\par
        \}\par
         // \'cf\'f0\'e8\'ec\'e5\'f0 3: \'d1\'ef\'e8\'f1\'ee\'ea \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'f5 \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'e2\par
        List<Person> people = new List<Person>()\par
        \{\par
            new Person("Alice", 30),\par
            new Person("Bob", 25),\par
            new Person("Charlie", 35)\par
        \};\par
        // \'cf\'ee\'e8\'f1\'ea \'f7\'e5\'eb\'ee\'e2\'e5\'ea\'e0 \'f1 \'e8\'ec\'e5\'ed\'e5\'ec Bob\par
        Person foundPerson = people.Find(person => person.Name == "Bob");\par
        if (foundPerson != null)\par
        \{\par
            Console.WriteLine($"\\n\'cd\'e0\'e9\'e4\'e5\'ed \'f7\'e5\'eb\'ee\'e2\'e5\'ea: \{foundPerson.Name\}, \{foundPerson.Age\} \'eb\'e5\'f2"); // Output: \'cd\'e0\'e9\'e4\'e5\'ed \'f7\'e5\'eb\'ee\'e2\'e5\'ea: Bob, 25 \'eb\'e5\'f2\par
        \}\par
        // \'c2\'fb\'e2\'ee\'e4 \'e2\'f1\'e5\'f5 \'eb\'fe\'e4\'e5\'e9 \'f1 \'e2\'ee\'e7\'f0\'e0\'f1\'f2\'ee\'ec \'e1\'ee\'eb\'fc\'f8\'e5 30\par
        List<Person> olderPeople = people.FindAll(person => person.Age > 30);\par
        Console.WriteLine("\\n\'cb\'fe\'e4\'e8 \'f1\'f2\'e0\'f0\'f8\'e5 30 \'eb\'e5\'f2:");\par
        foreach(Person person in olderPeople)\par
        \{\par
           Console.WriteLine($"\{person.Name\}, \{person.Age\} \'eb\'e5\'f2"); // Output: \'cb\'fe\'e4\'e8 \'f1\'f2\'e0\'f0\'f8\'e5 30 \'eb\'e5\'f2:\par
                                                                //         Charlie, 35 \'eb\'e5\'f2\par
        \}\par
    \}\par
\}\par
// \'cf\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'e9 \'ea\'eb\'e0\'f1\'f1 Person\par
public class Person\par
\{\par
    public string Name \{ get; set; \}\par
    public int Age \{ get; set; \}\par
\par
    public Person(string name, int age)\par
    \{\par
        Name = name;\par
        Age = age;\par
    \}\par
\}\par
\par
\'c4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'f1 \'f4\'e0\'e9\'eb\'e0\'ec\'e8 \'e2 C# \'ee\'e1\'fb\'f7\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'e5 \'ea\'eb\'e0\'f1\'f1\'fb, \'f0\'e0\'f1\'ef\'ee\'eb\'ee\'e6\'e5\'ed\'ed\'fb\'e5 \'e2 \'ef\'f0\'ee\'f1\'f2\'f0\'e0\'ed\'f1\'f2\'e2\'e5 \'e8\'ec\'e5\'ed System.IO:\par
File: \'cf\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'f1\'f2\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8\'e5 \'ec\'e5\'f2\'ee\'e4\'fb \'e4\'eb\'ff \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e9 \'f1 \'f4\'e0\'e9\'eb\'e0\'ec\'e8, \'f2\'e0\'ea\'e8\'f5 \'ea\'e0\'ea \'f7\'f2\'e5\'ed\'e8\'e5 \'e2\'f1\'e5\'e3\'ee \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'ec\'ee\'e3\'ee \'f4\'e0\'e9\'eb\'e0, \'e7\'e0\'ef\'e8\'f1\'fc \'e2\'f1\'e5\'e3\'ee \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'ec\'ee\'e3\'ee \'e2 \'f4\'e0\'e9\'eb, \'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e5, \'f3\'e4\'e0\'eb\'e5\'ed\'e8\'e5 \'e8 \'f2.\'e4.\par
StreamReader: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'f7\'e8\'f2\'e0\'f2\'fc \'e4\'e0\'ed\'ed\'fb\'e5 \'e8\'e7 \'f4\'e0\'e9\'eb\'e0 \'e2 \'e2\'e8\'e4\'e5 \'f2\'e5\'ea\'f1\'f2\'e0 (\'ef\'ee\'f1\'f2\'f0\'ee\'f7\'ed\'ee \'e8\'eb\'e8 \'f6\'e5\'eb\'e8\'ea\'ee\'ec).\par
StreamWriter: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'e7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'f2\'fc \'e4\'e0\'ed\'ed\'fb\'e5 \'e2 \'f4\'e0\'e9\'eb \'e2 \'e2\'e8\'e4\'e5 \'f2\'e5\'ea\'f1\'f2\'e0.\par
FileStream: \'ce\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'e5\'f2 \'e4\'ee\'f1\'f2\'f3\'ef \'ea \'f4\'e0\'e9\'eb\'f3 \'ea\'e0\'ea \'ea \'ef\'ee\'f2\'ee\'ea\'f3 \'e1\'e0\'e9\'f2\'ee\'e2 (\'e1\'e8\'ed\'e0\'f0\'ed\'e0\'ff \'f0\'e0\'e1\'ee\'f2\'e0).\par
BinaryReader: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'f7\'e8\'f2\'e0\'f2\'fc \'e4\'e2\'ee\'e8\'f7\'ed\'fb\'e5 \'e4\'e0\'ed\'ed\'fb\'e5 \'e8\'e7 \'ef\'ee\'f2\'ee\'ea\'e0.\par
BinaryWriter: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'e7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'f2\'fc \'e4\'e2\'ee\'e8\'f7\'ed\'fb\'e5 \'e4\'e0\'ed\'ed\'fb\'e5 \'e2 \'ef\'ee\'f2\'ee\'ea.\par
\b\'d7\'f2\'e5\'ed\'e8\'e5 \'e2\'f1\'e5\'e3\'ee \'f4\'e0\'e9\'eb\'e0\f0\lang1033 :\b0\f1\lang1049\par
File.ReadAllText(filePath): \'d7\'e8\'f2\'e0\'e5\'f2 \'e2\'f1\'e5 \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'ec\'ee\'e5 \'f4\'e0\'e9\'eb\'e0 \'e2 \'f1\'f2\'f0\'ee\'ea\'f3.\par
File.ReadAllLines(filePath): \'d7\'e8\'f2\'e0\'e5\'f2 \'e2\'f1\'e5 \'f1\'f2\'f0\'ee\'ea\'e8 \'e8\'e7 \'f4\'e0\'e9\'eb\'e0 \'e2 \'ec\'e0\'f1\'f1\'e8\'e2 \'f1\'f2\'f0\'ee\'ea.\par
StreamReader: \'c1\'ee\'eb\'e5\'e5 \'e3\'e8\'e1\'ea\'e8\'e9 \'ef\'ee\'e4\'f5\'ee\'e4, \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f9\'e8\'e9 \'f7\'e8\'f2\'e0\'f2\'fc \'e4\'e0\'ed\'ed\'fb\'e5 \'e8\'e7 \'f4\'e0\'e9\'eb\'e0 \'ef\'ee \'f7\'e0\'f1\'f2\'ff\'ec (\'ef\'ee\'f1\'f2\'f0\'ee\'f7\'ed\'ee \'e8\'eb\'e8 \'ef\'ee \'f1\'e8\'ec\'e2\'ee\'eb\'e0\'ec), \'f7\'f2\'ee \'ef\'ee\'eb\'e5\'e7\'ed\'ee \'e4\'eb\'ff \'f0\'e0\'e1\'ee\'f2\'fb \'f1 \'ee\'f7\'e5\'ed\'fc \'e1\'ee\'eb\'fc\'f8\'e8\'ec\'e8 \'f4\'e0\'e9\'eb\'e0\'ec\'e8. using \'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'e5\'f2 \'e0\'e2\'f2\'ee\'ec\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'ee\'e5 \'e7\'e0\'ea\'f0\'fb\'f2\'e8\'e5 \'ef\'ee\'f2\'ee\'ea\'e0 \'ef\'ee\'f1\'eb\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff.\par
using (StreamReader reader = new StreamReader(filePath))\par
\{\par
    string line;\par
    while ((line = reader.ReadLine()) != null)\par
    \{\par
        Console.WriteLine(line);\par
    \}\par
\}\par
\b\'c7\'e0\'ef\'e8\'f1\'fc \'e2\'f1\'e5\'e3\'ee \'f2\'e5\'ea\'f1\'f2\'e0:\par
\b0 File.WriteAllText(filePath, text): \'c7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2 \'f2\'e5\'ea\'f1\'f2 \'e2 \'f4\'e0\'e9\'eb, \'ef\'f0\'e8 \'fd\'f2\'ee\'ec, \'e5\'f1\'eb\'e8 \'f4\'e0\'e9\'eb \'f3\'e6\'e5 \'f1\'f3\'f9\'e5\'f1\'f2\'e2\'f3\'e5\'f2, \'ee\'ed \'e1\'f3\'e4\'e5\'f2 \'ef\'e5\'f0\'e5\'e7\'e0\'ef\'e8\'f1\'e0\'ed.\par
File.WriteAllLines(filePath, lines): \'c7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2 \'ec\'e0\'f1\'f1\'e8\'e2 \'f1\'f2\'f0\'ee\'ea \'e2 \'f4\'e0\'e9\'eb (\'ea\'e0\'e6\'e4\'e0\'ff \'f1\'f2\'f0\'ee\'ea\'e0 \'ed\'e0 \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'ee\'e9 \'f1\'f2\'f0\'ee\'ea\'e5), \'e5\'f1\'eb\'e8 \'f4\'e0\'e9\'eb \'f1\'f3\'f9\'e5\'f1\'f2\'e2\'f3\'e5\'f2 - \'ee\'ed \'e1\'f3\'e4\'e5\'f2 \'ef\'e5\'f0\'e5\'e7\'e0\'ef\'e8\'f1\'e0\'ed.\par
StreamWriter: \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'e7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'f2\'fc \'e4\'e0\'ed\'ed\'fb\'e5 \'e2 \'f4\'e0\'e9\'eb \'ef\'ee\'f1\'f2\'f0\'ee\'f7\'ed\'ee \'e8\'eb\'e8 \'ef\'ee \'f7\'e0\'f1\'f2\'ff\'ec. using \'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'e5\'f2 \'e0\'e2\'f2\'ee\'ec\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'ee\'e5 \'e7\'e0\'ea\'f0\'fb\'f2\'e8\'e5 \'ef\'ee\'f2\'ee\'ea\'e0 \'ef\'ee\'f1\'eb\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff.\par
using (StreamWriter writer = new StreamWriter(filePath, true)) // true - \'e4\'eb\'ff \'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'ff \'e2 \'f4\'e0\'e9\'eb\par
\{\par
    writer.WriteLine("\'cd\'ee\'e2\'e0\'ff \'f1\'f2\'f0\'ee\'ea\'e0."); // \'c7\'e0\'ef\'e8\'f1\'fc \'ed\'ee\'e2\'ee\'e9 \'f1\'f2\'f0\'ee\'ea\'e8\par
    writer.Write("\'c5\'f9\'e5 \'ee\'e4\'ed\'e0 \'f1\'f2\'f0\'ee\'ea\'e0, \'ed\'ee \'e1\'e5\'e7 \'ef\'e5\'f0\'e5\'ed\'ee\'f1\'e0.\\n");  // \'c7\'e0\'ef\'e8\'f1\'fc \'e1\'e5\'e7 \'ef\'e5\'f0\'e5\'ed\'ee\'f1\'e0\par
\}\par
StreamWriter(filePath, true): \'c5\'f1\'eb\'e8 \'e2\'f2\'ee\'f0\'ee\'e9 \'e0\'f0\'e3\'f3\'ec\'e5\'ed\'f2 \'f0\'e0\'e2\'e5\'ed true, \'f2\'ee \'ed\'ee\'e2\'fb\'e5 \'e4\'e0\'ed\'ed\'fb\'e5 \'e1\'f3\'e4\'f3\'f2 \'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'fb \'e2 \'ea\'ee\'ed\'e5\'f6 \'f4\'e0\'e9\'eb\'e0. \'c5\'f1\'eb\'e8 false, \'f2\'ee \'f4\'e0\'e9\'eb \'e1\'f3\'e4\'e5\'f2 \'ef\'e5\'f0\'e5\'e7\'e0\'ef\'e8\'f1\'e0\'ed.\par
writer.WriteLine(): \'c7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2 \'f1\'f2\'f0\'ee\'ea\'f3 \'f1 \'ef\'e5\'f0\'e5\'ed\'ee\'f1\'ee\'ec \'ed\'e0 \'ed\'ee\'e2\'f3\'fe \'f1\'f2\'f0\'ee\'ea\'f3.\par
writer.Write(): \'c7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2 \'f1\'f2\'f0\'ee\'ea\'f3 \'e1\'e5\'e7 \'ef\'e5\'f0\'e5\'ed\'ee\'f1\'e0 \'ed\'e0 \'ed\'ee\'e2\'f3\'fe \'f1\'f2\'f0\'ee\'ea\'f3.\par
\f0\lang1033 ___\par
\b\f1\lang1049\'d1\'ef\'e8\'f1\'ea\'e8 \'e2 C#\b0\par
\b\'d1\'ef\'e8\'f1\'ea\'e8 (List) \b0\f2\emdash  \f1\'fd\'f2\'ee \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e8, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f2 \'f5\'f0\'e0\'ed\'e8\'f2\'fc \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'ee\'e5 \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2. \'ce\'ed\'e8 \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'fe\'f2 \'f3\'e4\'ee\'e1\'ed\'fb\'e5 \'ec\'e5\'f2\'ee\'e4\'fb \'e4\'eb\'ff \'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'ff, \'f3\'e4\'e0\'eb\'e5\'ed\'e8\'ff \'e8 \'ef\'ee\'e8\'f1\'ea\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2, \'e0 \'f2\'e0\'ea\'e6\'e5 \'e4\'eb\'ff \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'f5 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e9 \'ed\'e0\'e4 \'ed\'e8\'ec\'e8.\par
\b\'cf\'ee\'ed\'ff\'f2\'e8\'e5 \'f1\'ef\'e8\'f1\'ea\'e0\b0\par
\'d1\'ef\'e8\'f1\'ee\'ea \f2\emdash  \f1\'fd\'f2\'ee \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'ff, \'ea\'ee\'f2\'ee\'f0\'e0\'ff \'ec\'ee\'e6\'e5\'f2 \'f1\'ee\'e4\'e5\'f0\'e6\'e0\'f2\'fc \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'eb\'fe\'e1\'ee\'e3\'ee \'f2\'e8\'ef\'e0 \'e8 \'e0\'e2\'f2\'ee\'ec\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8 \'e8\'e7\'ec\'e5\'ed\'ff\'e5\'f2 \'f1\'e2\'ee\'e9 \'f0\'e0\'e7\'ec\'e5\'f0 \'ef\'ee \'ec\'e5\'f0\'e5 \'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'ff \'e8\'eb\'e8 \'f3\'e4\'e0\'eb\'e5\'ed\'e8\'ff \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2. \'c2 C# \'f1\'ef\'e8\'f1\'ea\'e8 \'f0\'e5\'e0\'eb\'e8\'e7\'ee\'e2\'e0\'ed\'fb \'f1 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5\'ec \'ea\'eb\'e0\'f1\'f1\'e0 List<T>, \'e3\'e4\'e5 T \f2\emdash  \f1\'fd\'f2\'ee \'f2\'e8\'ef \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'f1\'ef\'e8\'f1\'ea\'e0.\par
\b\'cf\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5 \'f1\'ef\'e8\'f1\'ea\'ee\'e2\b0\par
\'d1\'ef\'e8\'f1\'ea\'e8 \'f8\'e8\'f0\'ee\'ea\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'e4\'eb\'ff \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'e8 \'f3\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'ff \'e4\'e0\'ed\'ed\'fb\'ec\'e8 \'e2 \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'f5 \'ef\'f0\'e8\'eb\'ee\'e6\'e5\'ed\'e8\'ff\'f5. \'ce\'ed\'e8 \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'fe\'f2 \'e3\'e8\'e1\'ea\'ee\'f1\'f2\'fc \'e8 \'f3\'e4\'ee\'e1\'f1\'f2\'e2\'ee \'f0\'e0\'e1\'ee\'f2\'fb \'f1 \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'ff\'ec\'e8 \'e4\'e0\'ed\'ed\'fb\'f5, \'ee\'f1\'ee\'e1\'e5\'ed\'ed\'ee \'ea\'ee\'e3\'e4\'e0 \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'ed\'e5\'e8\'e7\'e2\'e5\'f1\'f2\'ed\'ee \'e7\'e0\'f0\'e0\'ed\'e5\'e5 \'e8\'eb\'e8 \'ec\'ee\'e6\'e5\'f2 \'e8\'e7\'ec\'e5\'ed\'ff\'f2\'fc\'f1\'ff.\par
\b\'ce\'ef\'e5\'f0\'e0\'f6\'e8\'e8 \'ed\'e0\'e4 \'f1\'ef\'e8\'f1\'ea\'e0\'ec\'e8\b0\par
\'c4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2: \'cc\'e5\'f2\'ee\'e4 Add \'e4\'ee\'e1\'e0\'e2\'eb\'ff\'e5\'f2 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'e2 \'ea\'ee\'ed\'e5\'f6 \'f1\'ef\'e8\'f1\'ea\'e0.\par
List<int> numbers = new List<int>();\par
numbers.Add(1);\par
numbers.Add(2);\par
numbers.Add(3);\par
\b\'d3\'e4\'e0\'eb\'e5\'ed\'e8\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2: \b0\'cc\'e5\'f2\'ee\'e4 Remove \'f3\'e4\'e0\'eb\'ff\'e5\'f2 \'ef\'e5\'f0\'e2\'ee\'e5 \'e2\'f5\'ee\'e6\'e4\'e5\'ed\'e8\'e5 \'f3\'ea\'e0\'e7\'e0\'ed\'ed\'ee\'e3\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 \'e8\'e7 \'f1\'ef\'e8\'f1\'ea\'e0.\par
csharp\par
numbers.Remove(2); // \'d3\'e4\'e0\'eb\'ff\'e5\'f2 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'f1\'ee \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5\'ec 2\par
\b\'c4\'ee\'f1\'f2\'f3\'ef \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec: \b0\'dd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'f1\'ef\'e8\'f1\'ea\'e0 \'e4\'ee\'f1\'f2\'f3\'ef\'ed\'fb \'ef\'ee \'e8\'ed\'e4\'e5\'ea\'f1\'f3, \'ed\'e0\'f7\'e8\'ed\'e0\'ff \'f1 0.\par
int firstElement = numbers[0]; // \'c4\'ee\'f1\'f2\'f3\'ef \'ea \'ef\'e5\'f0\'e2\'ee\'ec\'f3 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'f3\par
\b\'cf\'e5\'f0\'e5\'e1\'ee\'f0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2: \b0\'c4\'eb\'ff \'ef\'e5\'f0\'e5\'e1\'ee\'f0\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'f1\'ef\'e8\'f1\'ea\'e0 \'ec\'ee\'e6\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'f6\'e8\'ea\'eb for \'e8\'eb\'e8 foreach.\par
foreach (int number in numbers)\par
\{\par
    Console.WriteLine(number);\par
\}\par
\b\'cf\'ee\'e8\'f1\'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2: \b0\'cc\'e5\'f2\'ee\'e4 Contains \'ef\'f0\'ee\'e2\'e5\'f0\'ff\'e5\'f2, \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'f2\'f1\'ff \'eb\'e8 \'f3\'ea\'e0\'e7\'e0\'ed\'ed\'fb\'e9 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'e2 \'f1\'ef\'e8\'f1\'ea\'e5.\par
bool containsTwo = numbers.Contains(2); // \'cf\'f0\'ee\'e2\'e5\'f0\'ff\'e5\'f2, \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'f2\'f1\'ff \'eb\'e8 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'f1\'ee \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5\'ec 2\par
\b\'c2\'f1\'f2\'e0\'e2\'ea\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2: \b0\'cc\'e5\'f2\'ee\'e4 Insert \'e2\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'e2 \'f3\'ea\'e0\'e7\'e0\'ed\'ed\'f3\'fe \'ef\'ee\'e7\'e8\'f6\'e8\'fe \'f1\'ef\'e8\'f1\'ea\'e0.\par
numbers.Insert(1, 5); // \'c2\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'f1\'ee \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5\'ec 5 \'e2 \'ef\'ee\'e7\'e8\'f6\'e8\'fe \'f1 \'e8\'ed\'e4\'e5\'ea\'f1\'ee\'ec 1\par
\b\'ce\'f7\'e8\'f1\'f2\'ea\'e0 \'f1\'ef\'e8\'f1\'ea\'e0: \b0\'cc\'e5\'f2\'ee\'e4 Clear \'f3\'e4\'e0\'eb\'ff\'e5\'f2 \'e2\'f1\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'e8\'e7 \'f1\'ef\'e8\'f1\'ea\'e0.\par
numbers.Clear(); // \'ce\'f7\'e8\'f9\'e0\'e5\'f2 \'f1\'ef\'e8\'f1\'ee\'ea\par
\b\'cf\'f0\'e8\'ec\'e5\'f0\'fb \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'f1\'ef\'e8\'f1\'ea\'ee\'e2\b0\par
\b\'d1\'ee\'e7\'e4\'e0\'ed\'e8\'e5 \'e8 \'f0\'e0\'e1\'ee\'f2\'e0 \'f1\'ee \'f1\'ef\'e8\'f1\'ea\'ee\'ec \'f1\'f2\'f0\'ee\'ea\b0\par
List<string> fruits = new List<string>();\par
fruits.Add("Apple");\par
fruits.Add("Banana");\par
fruits.Add("Cherry");\par
foreach (string fruit in fruits)\par
\{\par
    Console.WriteLine(fruit);\par
\}\par
\par
\b\'d0\'e0\'e1\'ee\'f2\'e0 \'f1 \'f4\'e0\'e9\'eb\'e0\'ec\'e8 \'e2 C#\b0\par
\'d0\'e0\'e1\'ee\'f2\'e0 \'f1 \'f4\'e0\'e9\'eb\'e0\'ec\'e8 \'e2 C# \'e2\'ea\'eb\'fe\'f7\'e0\'e5\'f2 \'f7\'f2\'e5\'ed\'e8\'e5 \'e8 \'e7\'e0\'ef\'e8\'f1\'fc \'e4\'e0\'ed\'ed\'fb\'f5 \'e2 \'f4\'e0\'e9\'eb\'fb. \'c4\'eb\'ff \'fd\'f2\'ee\'e3\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff \'ea\'eb\'e0\'f1\'f1\'fb \'e8\'e7 \'ef\'f0\'ee\'f1\'f2\'f0\'e0\'ed\'f1\'f2\'e2\'e0 \'e8\'ec\'e5\'ed System.IO, \'f2\'e0\'ea\'e8\'e5 \'ea\'e0\'ea File, StreamReader, StreamWriter, FileStream \'e8 \'e4\'f0\'f3\'e3\'e8\'e5.\par
\b\'d7\'f2\'e5\'ed\'e8\'e5 \'e8\'e7 \'f4\'e0\'e9\'eb\'e0\b0\par
\'c4\'eb\'ff \'f7\'f2\'e5\'ed\'e8\'ff \'e4\'e0\'ed\'ed\'fb\'f5 \'e8\'e7 \'f4\'e0\'e9\'eb\'e0 \'ec\'ee\'e6\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ea\'eb\'e0\'f1\'f1 StreamReader \'e8\'eb\'e8 \'ec\'e5\'f2\'ee\'e4\'fb \'ea\'eb\'e0\'f1\'f1\'e0 File.\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff StreamReader:\b0\par
using System;\par
using System.IO;\par
public class Program\par
\{\par
    public static void Main()\par
    \{\par
        string path = "example.txt";\par
        // \'d7\'f2\'e5\'ed\'e8\'e5 \'f4\'e0\'e9\'eb\'e0 \'ef\'ee\'f1\'f2\'f0\'ee\'f7\'ed\'ee\par
        using (StreamReader reader = new StreamReader(path))\par
        \{\par
            string line;\par
            while ((line = reader.ReadLine()) != null)\par
            \{\par
                Console.WriteLine(line);\par
            \}\par
        \}\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'ec\'e5\'f2\'ee\'e4\'ee\'e2 \'ea\'eb\'e0\'f1\'f1\'e0 File:\b0\par
using System;\par
using System.IO;\par
public class Program\par
\{\par
    public static void Main()\par
    \{\par
        string path = "example.txt";\par
        // \'d7\'f2\'e5\'ed\'e8\'e5 \'e2\'f1\'e5\'f5 \'f1\'f2\'f0\'ee\'ea \'f4\'e0\'e9\'eb\'e0 \'e2 \'ec\'e0\'f1\'f1\'e8\'e2 \'f1\'f2\'f0\'ee\'ea\par
        string[] lines = File.ReadAllLines(path);\par
        foreach (string line in lines)\par
        \{\par
            Console.WriteLine(line);\par
        \}\par
        // \'d7\'f2\'e5\'ed\'e8\'e5 \'e2\'f1\'e5\'e3\'ee \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'ec\'ee\'e3\'ee \'f4\'e0\'e9\'eb\'e0 \'e2 \'ee\'e4\'ed\'f3 \'f1\'f2\'f0\'ee\'ea\'f3\par
        string content = File.ReadAllText(path);\par
        Console.WriteLine(content);\par
    \}\par
\}\par
\b\'c7\'e0\'ef\'e8\'f1\'fc \'e2 \'f4\'e0\'e9\'eb\b0\par
\'c4\'eb\'ff \'e7\'e0\'ef\'e8\'f1\'e8 \'e4\'e0\'ed\'ed\'fb\'f5 \'e2 \'f4\'e0\'e9\'eb \'ec\'ee\'e6\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'ea\'eb\'e0\'f1\'f1 StreamWriter \'e8\'eb\'e8 \'ec\'e5\'f2\'ee\'e4\'fb \'ea\'eb\'e0\'f1\'f1\'e0 File.\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff StreamWriter:\b0\par
using System;\par
using System.IO;\par
public class Program\par
\{\par
    public static void Main()\par
    \{\par
        string path = "example.txt";\par
        // \'c7\'e0\'ef\'e8\'f1\'fc \'e4\'e0\'ed\'ed\'fb\'f5 \'e2 \'f4\'e0\'e9\'eb\par
        using (StreamWriter writer = new StreamWriter(path))\par
        \{\par
            writer.WriteLine("Hello, World!");\par
            writer.WriteLine("This is a test.");\par
        \}\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'ec\'e5\'f2\'ee\'e4\'ee\'e2 \'ea\'eb\'e0\'f1\'f1\'e0 File:\b0\par
using System;\par
using System.IO;\par
public class Program\par
\{\par
    public static void Main()\par
    \{\par
        string path = "example.txt";\par
        // \'c7\'e0\'ef\'e8\'f1\'fc \'f1\'f2\'f0\'ee\'ea\'e8 \'e2 \'f4\'e0\'e9\'eb\par
        File.WriteAllText(path, "Hello, World!");\par
        // \'c7\'e0\'ef\'e8\'f1\'fc \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'f1\'f2\'f0\'ee\'ea \'e2 \'f4\'e0\'e9\'eb\par
        string[] lines = \{ "First line", "Second line", "Third line" \};\par
        File.WriteAllLines(path, lines);\par
    \}\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'f7\'f2\'e5\'ed\'e8\'ff \'e8 \'e7\'e0\'ef\'e8\'f1\'e8 \'e2 \'f4\'e0\'e9\'eb\par
\'cf\'f0\'e8\'ec\'e5\'f0 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb, \'ea\'ee\'f2\'ee\'f0\'e0\'ff \'f7\'e8\'f2\'e0\'e5\'f2 \'e4\'e0\'ed\'ed\'fb\'e5 \'e8\'e7 \'ee\'e4\'ed\'ee\'e3\'ee \'f4\'e0\'e9\'eb\'e0 \'e8 \'e7\'e0\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2 \'e8\'f5 \'e2 \'e4\'f0\'f3\'e3\'ee\'e9 \'f4\'e0\'e9\'eb:\b0\par
using System;\par
using System.IO;\par
public class Program\par
\{\par
    public static void Main()\par
    \{\par
        string inputPath = "input.txt";\par
        string outputPath = "output.txt";\par
        // \'d7\'f2\'e5\'ed\'e8\'e5 \'e4\'e0\'ed\'ed\'fb\'f5 \'e8\'e7 \'f4\'e0\'e9\'eb\'e0\par
        string content = File.ReadAllText(inputPath);\par
        // \'c7\'e0\'ef\'e8\'f1\'fc \'e4\'e0\'ed\'ed\'fb\'f5 \'e2 \'e4\'f0\'f3\'e3\'ee\'e9 \'f4\'e0\'e9\'eb\par
        File.WriteAllText(outputPath, content);\par
        Console.WriteLine("\'c4\'e0\'ed\'ed\'fb\'e5 \'f3\'f1\'ef\'e5\'f8\'ed\'ee \'f1\'ea\'ee\'ef\'e8\'f0\'ee\'e2\'e0\'ed\'fb \'e8\'e7 input.txt \'e2 output.txt");\par
    \}\par
\}\i\f0\lang9\par
}
 