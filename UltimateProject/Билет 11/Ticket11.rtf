{\rtf1\ansi\ansicpg1251\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset204 Calibri;}{\f1\fnil Calibri;}{\f2\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\i\f0\fs22\lang1049\'ca\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e8: \'ef\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5, \'f2\'e8\'ef\'fb \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e9.\par
\'cc\'e0\'f1\'f1\'e8\'e2\'fb \'e2 C#: \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5, \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff, \'e4\'ee\'f1\'f2\'f3\'ef \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec.\par
\'d0\'e5\'e0\'eb\'e8\'e7\'f3\'e9\'f2\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'ee\'ed\'e0\'eb\'fc\'ed\'ee\'f1\'f2\'fc Drag & Drop \'ec\'e5\'e6\'e4\'f3 \'e4\'e2\'f3\'ec\'ff ListBox. \'cf\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc \'e4\'ee\'eb\'e6\'e5\'ed \'e8\'ec\'e5\'f2\'fc \'e2\'ee\'e7\'ec\'ee\'e6\'ed\'ee\'f1\'f2\'fc \'ef\'e5\'f0\'e5\'f2\'e0\'f1\'ea\'e8\'e2\'e0\'f2\'fc \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'e8\'e7 \'ee\'e4\'ed\'ee\'e3\'ee \'f1\'ef\'e8\'f1\'ea\'e0 \'e2 \'e4\'f0\'f3\'e3\'ee\'e9.\par
\par
\b0\i0\'c2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e8 \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e8 - \'fd\'f2\'ee \'ee\'e1\'fa\'e5\'ea\'f2\'fb, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'f1\'eb\'f3\'e6\'e0\'f2 \'ea\'ee\'ed\'f2\'e5\'e9\'ed\'e5\'f0\'e0\'ec\'e8 \'e4\'eb\'ff \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'e8 \'f3\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'ff \'e3\'f0\'f3\'ef\'ef\'e0\'ec\'e8 \'e4\'f0\'f3\'e3\'e8\'f5 \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'e2. \'ce\'ed\'e8 \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'fe\'f2 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e9 \'f1\'ef\'ee\'f1\'ee\'e1 \'ee\'f0\'e3\'e0\'ed\'e8\'e7\'e0\'f6\'e8\'e8 \'e4\'e0\'ed\'ed\'fb\'f5, \'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'ff \'ef\'f0\'e8 \'fd\'f2\'ee\'ec \'e3\'e8\'e1\'ea\'ee\'f1\'f2\'fc \'e2 \'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'e8, \'f3\'e4\'e0\'eb\'e5\'ed\'e8\'e8, \'ef\'ee\'e8\'f1\'ea\'e5 \'e8 \'e8\'f2\'e5\'f0\'e0\'f6\'e8\'e8 \'ef\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec.\par
\b\'d2\'e8\'ef\'fb \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e9 \'e2 C#\b0\par
C# \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'e1\'ee\'e3\'e0\'f2\'fb\'e9 \'ed\'e0\'e1\'ee\'f0 \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e9, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ec\'ee\'e6\'ed\'ee \'f0\'e0\'e7\'e4\'e5\'eb\'e8\'f2\'fc \'ed\'e0 \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'ee\'f1\'ed\'ee\'e2\'ed\'fb\'f5 \'ea\'e0\'f2\'e5\'e3\'ee\'f0\'e8\'e9:\par
\b\'ce\'e1\'f9\'e8\'e5 (Generic) \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e8 (\'ed\'e0\'f5\'ee\'e4\'ff\'f2\'f1\'ff \'e2 \'ef\'f0\'ee\'f1\'f2\'f0\'e0\'ed\'f1\'f2\'e2\'e5 \'e8\'ec\'e5\'ed System.Collections.Generic)\b0\par
\'dd\'f2\'ee \'ed\'e0\'e8\'e1\'ee\'eb\'e5\'e5 \'f7\'e0\'f1\'f2\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec\'fb\'e5 \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e8, \'ef\'ee\'f1\'ea\'ee\'eb\'fc\'ea\'f3 \'ee\'ed\'e8 \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'fe\'f2 \'f2\'e8\'ef\'ee\'e1\'e5\'e7\'ee\'ef\'e0\'f1\'ed\'ee\'f1\'f2\'fc. \'dd\'f2\'ee \'ee\'e7\'ed\'e0\'f7\'e0\'e5\'f2, \'f7\'f2\'ee \'e2\'fb \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2\'e5 \'f2\'e8\'ef \'e4\'e0\'ed\'ed\'fb\'f5, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e1\'f3\'e4\'e5\'f2 \'f5\'f0\'e0\'ed\'e8\'f2\'fc\'f1\'ff \'e2 \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e8, \'f7\'f2\'ee \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f2\'ee\'f0\'f3 \'ee\'e1\'ed\'e0\'f0\'f3\'e6\'e8\'e2\'e0\'f2\'fc \'ee\'f8\'e8\'e1\'ea\'e8 \'f2\'e8\'ef\'ee\'e2 \'ed\'e0 \'fd\'f2\'e0\'ef\'e5 \'ea\'ee\'ec\'ef\'e8\'eb\'ff\'f6\'e8\'e8.\par
\b List<T>: \'c4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'e8\'e9 \'f1\'ef\'e8\'f1\'ee\'ea, \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'fe\'f9\'e8\'e9 \'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'e5, \'f3\'e4\'e0\'eb\'e5\'ed\'e8\'e5 \'e8 \'e4\'ee\'f1\'f2\'f3\'ef \'ef\'ee \'e8\'ed\'e4\'e5\'ea\'f1\'f3. \'cd\'e0\'e8\'e1\'ee\'eb\'e5\'e5 \'f7\'e0\'f1\'f2\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'ec\'fb\'e9 \'f2\'e8\'ef \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e8.\b0\par
List<int> numbers = new List<int>();\par
numbers.Add(1);\par
numbers.Add(2);\par
int firstNumber = numbers[0]; // \'c4\'ee\'f1\'f2\'f3\'ef \'ef\'ee \'e8\'ed\'e4\'e5\'ea\'f1\'f3\par
\b Dictionary<TKey, TValue>: \'d1\'eb\'ee\'e2\'e0\'f0\'fc (\'e0\'f1\'f1\'ee\'f6\'e8\'e0\'f2\'e8\'e2\'ed\'fb\'e9 \'ec\'e0\'f1\'f1\'e8\'e2), \'f5\'f0\'e0\'ed\'e8\'f2 \'ef\'e0\'f0\'fb \'ea\'eb\'fe\'f7-\'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5, \'e3\'e4\'e5 \'ea\'eb\'fe\'f7\'e8 \'e4\'ee\'eb\'e6\'ed\'fb \'e1\'fb\'f2\'fc \'f3\'ed\'e8\'ea\'e0\'eb\'fc\'ed\'fb\'ec\'e8. \'cf\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'e1\'fb\'f1\'f2\'f0\'ee \'e8\'f1\'ea\'e0\'f2\'fc \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff \'ef\'ee \'ea\'eb\'fe\'f7\'f3.\b0\par
Dictionary<string, int> ages = new Dictionary<string, int>();\par
ages.Add("Alice", 30);\par
ages.Add("Bob", 25);\par
int aliceAge = ages["Alice"]; // \'c4\'ee\'f1\'f2\'f3\'ef \'ef\'ee \'ea\'eb\'fe\'f7\'f3\par
\b HashSet<T>: \'cc\'ed\'ee\'e6\'e5\'f1\'f2\'e2\'ee, \'f5\'f0\'e0\'ed\'e8\'f2 \'f2\'ee\'eb\'fc\'ea\'ee \'f3\'ed\'e8\'ea\'e0\'eb\'fc\'ed\'fb\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb, \'ed\'e5 \'f1\'ee\'f5\'f0\'e0\'ed\'ff\'e5\'f2 \'ef\'ee\'f0\'ff\'e4\'ee\'ea. \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'e4\'eb\'ff \'ef\'f0\'ee\'e2\'e5\'f0\'ea\'e8 \'ed\'e0\'eb\'e8\'f7\'e8\'ff \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'e8 \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e9 \'ed\'e0\'e4 \'ec\'ed\'ee\'e6\'e5\'f1\'f2\'e2\'e0\'ec\'e8.\b0\par
HashSet<string> colors = new HashSet<string>();\par
colors.Add("red");\par
colors.Add("blue");\par
bool containsRed = colors.Contains("red");\par
\b Queue<T>: \'ce\'f7\'e5\'f0\'e5\'e4\'fc, \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2 \'ef\'ee \'ef\'f0\'e8\'ed\'f6\'e8\'ef\'f3 \ldblquote\'ef\'e5\'f0\'e2\'fb\'ec \'ef\'f0\'e8\'f8\'e5\'eb - \'ef\'e5\'f0\'e2\'fb\'ec \'f3\'f8\'e5\'eb\rdblquote  (FIFO).\par
\b0 Queue<string> tasks = new Queue<string>();\par
tasks.Enqueue("Task 1");\par
tasks.Enqueue("Task 2");\par
string firstTask = tasks.Dequeue();\par
\b Stack<T>: \'d1\'f2\'e5\'ea, \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2 \'ef\'ee \'ef\'f0\'e8\'ed\'f6\'e8\'ef\'f3 \ldblquote\'ef\'ee\'f1\'eb\'e5\'e4\'ed\'e8\'ec \'ef\'f0\'e8\'f8\'e5\'eb - \'ef\'e5\'f0\'e2\'fb\'ec \'f3\'f8\'e5\'eb\rdblquote  (LIFO).\b0\par
Stack<int> callStack = new Stack<int>();\par
callStack.Push(1);\par
callStack.Push(2);\par
int lastElement = callStack.Pop();\par
\b LinkedList<T>: \'c4\'e2\'f3\'f1\'e2\'ff\'e7\'ed\'fb\'e9 \'f1\'ef\'e8\'f1\'ee\'ea, \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'e5\'f2 \'fd\'f4\'f4\'e5\'ea\'f2\'e8\'e2\'ed\'ee \'e2\'f1\'f2\'e0\'e2\'eb\'ff\'f2\'fc \'e8 \'f3\'e4\'e0\'eb\'ff\'f2\'fc \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'e2 \'eb\'fe\'e1\'ee\'ec \'ec\'e5\'f1\'f2\'e5 \'f1\'ef\'e8\'f1\'ea\'e0.\par
\b0 LinkedList<string> names = new LinkedList<string>();\par
names.AddFirst("John");\par
names.AddLast("Jane");\par
\b SortedDictionary<TKey, TValue>: \'d1\'eb\'ee\'e2\'e0\'f0\'fc, \'e3\'e4\'e5 \'ea\'eb\'fe\'f7\'e8 \'f5\'f0\'e0\'ed\'ff\'f2\'f1\'ff \'e2 \'ee\'f2\'f1\'ee\'f0\'f2\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'ee\'ec \'ef\'ee\'f0\'ff\'e4\'ea\'e5.\b0\par
SortedSet<T>: \'cc\'ed\'ee\'e6\'e5\'f1\'f2\'e2\'ee, \'e3\'e4\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'f5\'f0\'e0\'ed\'ff\'f2\'f1\'ff \'e2 \'ee\'f2\'f1\'ee\'f0\'f2\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'ee\'ec \'ef\'ee\'f0\'ff\'e4\'ea\'e5.\par
\par
\'cc\'e0\'f1\'f1\'e8\'e2 - \'fd\'f2\'ee \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e0 \'e4\'e0\'ed\'ed\'fb\'f5, \'ea\'ee\'f2\'ee\'f0\'e0\'ff \'ef\'f0\'e5\'e4\'f1\'f2\'e0\'e2\'eb\'ff\'e5\'f2 \'f1\'ee\'e1\'ee\'e9 \'f3\'ef\'ee\'f0\'ff\'e4\'ee\'f7\'e5\'ed\'ed\'f3\'fe \'ef\'ee\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'ed\'ee\'f1\'f2\'fc \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'ee\'e4\'ed\'ee\'e3\'ee \'e8 \'f2\'ee\'e3\'ee \'e6\'e5 \'f2\'e8\'ef\'e0. \'cc\'e0\'f1\'f1\'e8\'e2\'fb \'e8\'ec\'e5\'fe\'f2 \'f4\'e8\'ea\'f1\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'e9 \'f0\'e0\'e7\'ec\'e5\'f0, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'e5\'f2\'f1\'ff \'ef\'f0\'e8 \'e8\'f5 \'f1\'ee\'e7\'e4\'e0\'ed\'e8\'e8 \'e8 \'ed\'e5 \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'e8\'e7\'ec\'e5\'ed\'e5\'ed.\par
\b\'ce\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'e2 C# \'f1\'ee\'f1\'f2\'ee\'e8\'f2 \'e8\'e7 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'f5 \'f7\'e0\'f1\'f2\'e5\'e9:\b0\par
\'d2\'e8\'ef \'e4\'e0\'ed\'ed\'fb\'f5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2: \'d3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2, \'ea\'e0\'ea\'ee\'e9 \'f2\'e8\'ef \'e4\'e0\'ed\'ed\'fb\'f5 \'e1\'f3\'e4\'e5\'f2 \'f5\'f0\'e0\'ed\'e8\'f2\'fc\'f1\'ff \'e2 \'ec\'e0\'f1\'f1\'e8\'e2\'e5 (\'ed\'e0\'ef\'f0\'e8\'ec\'e5\'f0, int, string, double, \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'f1\'ea\'e8\'e5 \'ea\'eb\'e0\'f1\'f1\'fb).\par
\'ca\'e2\'e0\'e4\'f0\'e0\'f2\'ed\'fb\'e5 \'f1\'ea\'ee\'e1\'ea\'e8 []: \'ce\'e1\'ee\'e7\'ed\'e0\'f7\'e0\'fe\'f2, \'f7\'f2\'ee \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ec\'e0\'f1\'f1\'e8\'e2\'ee\'ec.\par
\'c8\'ec\'ff \'ec\'e0\'f1\'f1\'e8\'e2\'e0: \'c8\'ec\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9, \'ef\'ee \'ea\'ee\'f2\'ee\'f0\'ee\'ec\'f3 \'ec\'ee\'e6\'ed\'ee \'e1\'f3\'e4\'e5\'f2 \'ee\'e1\'f0\'e0\'f9\'e0\'f2\'fc\'f1\'ff \'ea \'ec\'e0\'f1\'f1\'e8\'e2\'f3.\par
\'d1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f1:\par
\'f2\'e8\'ef_\'e4\'e0\'ed\'ed\'fb\'f5[] \'e8\'ec\'ff_\'ec\'e0\'f1\'f1\'e8\'e2\'e0; \par
\'cf\'f0\'e8\'ec\'e5\'f0\'fb:\par
int[] numbers;     // \'cc\'e0\'f1\'f1\'e8\'e2 \'f6\'e5\'eb\'fb\'f5 \'f7\'e8\'f1\'e5\'eb\par
string[] names;    // \'cc\'e0\'f1\'f1\'e8\'e2 \'f1\'f2\'f0\'ee\'ea\par
double[] prices;   // \'cc\'e0\'f1\'f1\'e8\'e2 \'f7\'e8\'f1\'e5\'eb \'f1 \'ef\'eb\'e0\'e2\'e0\'fe\'f9\'e5\'e9 \'f2\'ee\'f7\'ea\'ee\'e9\par
\b\'c8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ec\'e0\'f1\'f1\'e8\'e2\'e0\b0\par
\'cf\'ee\'f1\'eb\'e5 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'ff \'ec\'e0\'f1\'f1\'e8\'e2 \'ed\'f3\'e6\'ed\'ee \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'f2\'fc, \'f7\'f2\'ee\'e1\'fb \'e2\'fb\'e4\'e5\'eb\'e8\'f2\'fc \'ef\'e0\'ec\'ff\'f2\'fc \'e4\'eb\'ff \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2. \'c5\'f1\'f2\'fc \'ed\'e5\'f1\'ea\'ee\'eb\'fc\'ea\'ee \'f1\'ef\'ee\'f1\'ee\'e1\'ee\'e2 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'ec\'e0\'f1\'f1\'e8\'e2\'ee\'e2:\par
\'d1 \'f3\'ea\'e0\'e7\'e0\'ed\'e8\'e5\'ec \'f0\'e0\'e7\'ec\'e5\'f0\'e0 \'e8 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5\'ec new:\par
int[] numbers = new int[5]; // \'d1\'ee\'e7\'e4\'e0\'e5\'ec \'ec\'e0\'f1\'f1\'e8\'e2 \'ed\'e0 5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'f2\'e8\'ef\'e0 int\par
string[] names = new string[3]; // \'d1\'ee\'e7\'e4\'e0\'e5\'ec \'ec\'e0\'f1\'f1\'e8\'e2 \'ed\'e0 3 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 \'f2\'e8\'ef\'e0 string\par
\'cf\'f0\'e8 \'fd\'f2\'ee\'ec \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'e1\'f3\'e4\'f3\'f2 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'ed\'fb \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff\'ec\'e8 \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe \'e4\'eb\'ff \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'fe\'f9\'e5\'e3\'ee \'f2\'e8\'ef\'e0 (\'ed\'e0\'ef\'f0\'e8\'ec\'e5\'f0, 0 \'e4\'eb\'ff int, null \'e4\'eb\'ff string).\par
\'d1 \'ee\'e4\'ed\'ee\'e2\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e5\'e9 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff\'ec\'e8:\par
int[] numbers = new int[] \{ 1, 2, 3, 4, 5 \};\par
string[] names = new string[] \{ "Alice", "Bob", "Charlie" \};\par
double[] prices = new double[] \{ 10.50, 20.75, 5.99 \};\par
\'c2 \'fd\'f2\'ee\'ec \'f1\'eb\'f3\'f7\'e0\'e5 \'f0\'e0\'e7\'ec\'e5\'f0 \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'ff\'e5\'f2\'f1\'ff \'e0\'e2\'f2\'ee\'ec\'e0\'f2\'e8\'f7\'e5\'f1\'ea\'e8 \'ed\'e0 \'ee\'f1\'ed\'ee\'e2\'e5 \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'e0 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e9 \'e2 \'f4\'e8\'e3\'f3\'f0\'ed\'fb\'f5 \'f1\'ea\'ee\'e1\'ea\'e0\'f5.\par
\'d1\'ee\'ea\'f0\'e0\'f9\'e5\'ed\'ed\'e0\'ff \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff: \'cc\'ee\'e6\'ed\'ee \'ee\'ef\'f3\'f1\'f2\'e8\'f2\'fc new \'f2\'e8\'ef[], \'e5\'f1\'eb\'e8 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ef\'f0\'ee\'e8\'f1\'f5\'ee\'e4\'e8\'f2 \'ee\'e4\'ed\'ee\'e2\'f0\'e5\'ec\'e5\'ed\'ed\'ee \'f1 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5\'ec:\par
int[] numbers = \{ 1, 2, 3, 4, 5 \};\par
string[] names = \{ "Alice", "Bob", "Charlie" \};\par
double[] prices = \{ 10.50, 20.75, 5.99 \};\par
\b\'c4\'ee\'f1\'f2\'f3\'ef \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec \'ec\'e0\'f1\'f1\'e8\'e2\'e0\b0\par
\'c4\'ee\'f1\'f2\'f3\'ef \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'ee\'f1\'f3\'f9\'e5\'f1\'f2\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ef\'ee \'e8\'f5 \'e8\'ed\'e4\'e5\'ea\'f1\'f3. \'c8\'ed\'e4\'e5\'ea\'f1 \f1\endash  \f0\'fd\'f2\'ee \'f6\'e5\'eb\'ee\'e5 \'f7\'e8\'f1\'eb\'ee, \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'fe\'f9\'e5\'e5 \'ed\'e0 \'ef\'ee\'e7\'e8\'f6\'e8\'fe \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 \'e2 \'ec\'e0\'f1\'f1\'e8\'e2\'e5. \'c8\'ed\'e4\'e5\'ea\'f1\'e0\'f6\'e8\'ff \'ed\'e0\'f7\'e8\'ed\'e0\'e5\'f2\'f1\'ff \'f1 0.\par
\'d1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f1:\par
\'e8\'ec\'ff_\'ec\'e0\'f1\'f1\'e8\'e2\'e0[\'e8\'ed\'e4\'e5\'ea\'f1];\par
\'cf\'f0\'e8\'ec\'e5\'f0\'fb:\par
int[] numbers = \{ 10, 20, 30, 40, 50 \};\par
int firstNumber = numbers[0]; // firstNumber = 10\par
int secondNumber = numbers[1]; // secondNumber = 20\par
int lastNumber = numbers[4];   // lastNumber = 50\par
Console.WriteLine(firstNumber);\par
Console.WriteLine(secondNumber);\par
Console.WriteLine(lastNumber);\par
// \'c8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 \'ec\'e0\'f1\'f1\'e8\'e2\'e0\par
numbers[2] = 35; // \'d2\'e5\'ef\'e5\'f0\'fc numbers = \{ 10, 20, 35, 40, 50 \}\par
\f2\lang1033 ___\par
\f0\lang1049\'ca\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e8 \'e2 C# \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f2 \'f5\'f0\'e0\'ed\'e8\'f2\'fc \'e8 \'f3\'ef\'f0\'e0\'e2\'eb\'ff\'f2\'fc \'e3\'f0\'f3\'ef\'ef\'e0\'ec\'e8 \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'e2. \'ce\'ed\'e8 \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'fe\'f2 \'f3\'e4\'ee\'e1\'ed\'fb\'e5 \'ec\'e5\'f2\'ee\'e4\'fb \'e4\'eb\'ff \'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\'e8\'ff, \'f3\'e4\'e0\'eb\'e5\'ed\'e8\'ff \'e8 \'ef\'ee\'e8\'f1\'ea\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2, \'e0 \'f2\'e0\'ea\'e6\'e5 \'e4\'eb\'ff \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'f5 \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'e9 \'ed\'e0\'e4 \'ed\'e8\'ec\'e8. \'c2\'ee\'f2 \'ee\'f1\'ed\'ee\'e2\'ed\'fb\'e5 \'f2\'e8\'ef\'fb \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e9 \'e8 \'e8\'f5 \'ef\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5:\par
\b\'d2\'e8\'ef\'fb \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'e9\par
Array (\'cc\'e0\'f1\'f1\'e8\'e2)\par
\b0\'cf\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5: \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'e4\'eb\'ff \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'f4\'e8\'ea\'f1\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'ee\'e3\'ee \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'ee\'e4\'ed\'ee\'e3\'ee \'f2\'e8\'ef\'e0.\par
\'cf\'f0\'e8\'ec\'e5\'f0: int[] numbers = new int[5];\par
\b List (\'d1\'ef\'e8\'f1\'ee\'ea)\b0\par
\'cf\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5: \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'e4\'eb\'ff \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'e4\'e8\'ed\'e0\'ec\'e8\'f7\'e5\'f1\'ea\'ee\'e3\'ee \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2. \'cf\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'f2 \'e1\'fb\'f1\'f2\'f0\'fb\'e9 \'e4\'ee\'f1\'f2\'f3\'ef \'ef\'ee \'e8\'ed\'e4\'e5\'ea\'f1\'f3.\par
\'cf\'f0\'e8\'ec\'e5\'f0: List<int> numbers = new List<int>();\par
\b Dictionary (\'d1\'eb\'ee\'e2\'e0\'f0\'fc)\b0\par
\'cf\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5: \'d5\'f0\'e0\'ed\'e8\'f2 \'ef\'e0\'f0\'fb "\'ea\'eb\'fe\'f7-\'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5". \'cf\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'f2 \'e1\'fb\'f1\'f2\'f0\'fb\'e9 \'e4\'ee\'f1\'f2\'f3\'ef \'ef\'ee \'ea\'eb\'fe\'f7\'f3.\par
\'cf\'f0\'e8\'ec\'e5\'f0: Dictionary<string, int> ages = new Dictionary<string, int>();\par
\b Queue (\'ce\'f7\'e5\'f0\'e5\'e4\'fc)\b0\par
\'cf\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5: \'d0\'e5\'e0\'eb\'e8\'e7\'f3\'e5\'f2 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'f3 \'e4\'e0\'ed\'ed\'fb\'f5 FIFO (First In, First Out). \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'e4\'eb\'ff \'f3\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'ff \'ee\'f7\'e5\'f0\'e5\'e4\'ff\'ec\'e8 \'e7\'e0\'e4\'e0\'f7.\par
\'cf\'f0\'e8\'ec\'e5\'f0: Queue<string> queue = new Queue<string>();\par
\b Stack (\'d1\'f2\'e5\'ea)\b0\par
\'cf\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5: \'d0\'e5\'e0\'eb\'e8\'e7\'f3\'e5\'f2 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'f3 \'e4\'e0\'ed\'ed\'fb\'f5 LIFO (Last In, First Out). \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'e4\'eb\'ff \'f3\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'ff \'f1\'f2\'e5\'ea\'ee\'ec \'e2\'fb\'e7\'ee\'e2\'ee\'e2.\par
\'cf\'f0\'e8\'ec\'e5\'f0: Stack<string> stack = new Stack<string>();\par
\b HashSet (\'cc\'ed\'ee\'e6\'e5\'f1\'f2\'e2\'ee)\b0\par
\'cf\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'e5: \'d5\'f0\'e0\'ed\'e8\'f2 \'f3\'ed\'e8\'ea\'e0\'eb\'fc\'ed\'fb\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb. \'cf\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'f2 \'e1\'fb\'f1\'f2\'f0\'fb\'e9 \'e4\'ee\'f1\'f2\'f3\'ef.\par
\'cf\'f0\'e8\'ec\'e5\'f0: HashSet<int> set = new HashSet<int>();\par
\b\'cf\'f0\'e8\'ec\'e5\'f0\'fb \'f0\'e0\'e1\'ee\'f2\'fb \'f1 \'ea\'ee\'eb\'eb\'e5\'ea\'f6\'e8\'ff\'ec\'e8\b0\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'f0\'e0\'e1\'ee\'f2\'fb \'f1 List:\b0\par
List<int> numbers = new List<int>();\par
numbers.Add(1);\par
numbers.Add(2);\par
numbers.Add(3);\par
foreach (int number in numbers)\par
\{\par
    Console.WriteLine(number);\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'f0\'e0\'e1\'ee\'f2\'fb \'f1 Dictionary:\b0\par
Dictionary<string, int> ages = new Dictionary<string, int>();\par
ages["Alice"] = 30;\par
ages["Bob"] = 25;\par
foreach (var kvp in ages)\par
\{\par
    Console.WriteLine($"\{kvp.Key\}: \{kvp.Value\}");\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'f0\'e0\'e1\'ee\'f2\'fb \'f1 Queue:\b0\par
Queue<string> queue = new Queue<string>();\par
queue.Enqueue("First");\par
queue.Enqueue("Second");\par
queue.Enqueue("Third");\par
while (queue.Count > 0)\par
\{\par
    Console.WriteLine(queue.Dequeue());\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'f0\'e0\'e1\'ee\'f2\'fb \'f1 Stack:\b0\par
Stack<string> stack = new Stack<string>();\par
stack.Push("First");\par
stack.Push("Second");\par
stack.Push("Third");\par
while (stack.Count > 0)\par
\{\par
    Console.WriteLine(stack.Pop());\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'f0\'e0\'e1\'ee\'f2\'fb \'f1 HashSet:\b0\par
HashSet<int> set = new HashSet<int>();\par
set.Add(1);\par
set.Add(2);\par
set.Add(2); // \'c4\'f3\'e1\'eb\'e8\'ea\'e0\'f2 \'ed\'e5 \'e1\'f3\'e4\'e5\'f2 \'e4\'ee\'e1\'e0\'e2\'eb\'e5\'ed\par
foreach (int number in set)\par
\{\par
    Console.WriteLine(number);\par
\}\par
\par
\b\'cc\'e0\'f1\'f1\'e8\'e2\'fb \'e2 C#\b0\par
\b\'cc\'e0\'f1\'f1\'e8\'e2\'fb \b0\f1\emdash  \f0\'fd\'f2\'ee \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'fb \'e4\'e0\'ed\'ed\'fb\'f5, \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'fe\'f2 \'f5\'f0\'e0\'ed\'e8\'f2\'fc \'f4\'e8\'ea\'f1\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'ee\'e5 \'ea\'ee\'eb\'e8\'f7\'e5\'f1\'f2\'e2\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'ee\'e4\'ed\'ee\'e3\'ee \'f2\'e8\'ef\'e0. \'ce\'ed\'e8 \'ef\'f0\'e5\'e4\'ee\'f1\'f2\'e0\'e2\'eb\'ff\'fe\'f2 \'e1\'fb\'f1\'f2\'f0\'fb\'e9 \'e4\'ee\'f1\'f2\'f3\'ef \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec \'ef\'ee \'e8\'ed\'e4\'e5\'ea\'f1\'f3.\par
\b\'ce\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e5 \'ec\'e0\'f1\'f1\'e8\'e2\'e0\b0\par
\'c4\'eb\'ff \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'ff \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'e2 C# \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'ea\'e2\'e0\'e4\'f0\'e0\'f2\'ed\'fb\'e5 \'f1\'ea\'ee\'e1\'ea\'e8 [] \'ef\'ee\'f1\'eb\'e5 \'f2\'e8\'ef\'e0 \'e4\'e0\'ed\'ed\'fb\'f5.\par
\b\'cf\'f0\'e8\'ec\'e5\'f0:\b0\par
int[] numbers;\par
\b\'c8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ec\'e0\'f1\'f1\'e8\'e2\'e0\par
\'cc\'e0\'f1\'f1\'e8\'e2\'fb \'ec\'ee\'e6\'ed\'ee \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'ef\'f0\'e8 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e8 \'e8\'eb\'e8 \'ef\'ee\'e7\'e6\'e5.\par
\'cf\'f0\'e8\'ec\'e5\'f0 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'ef\'f0\'e8 \'ee\'e1\'fa\'ff\'e2\'eb\'e5\'ed\'e8\'e8:\b0\par
int[] numbers = new int[5]; // \'cc\'e0\'f1\'f1\'e8\'e2 \'e8\'e7 5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2, \'e2\'f1\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e8\'f0\'ee\'e2\'e0\'ed\'fb \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5\'ec \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe (0)\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'f1 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec\'e8:\b0\par
int[] numbers = new int[] \{ 1, 2, 3, 4, 5 \}; // \'cc\'e0\'f1\'f1\'e8\'e2 \'e8\'e7 5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'f1 \'e7\'e0\'e4\'e0\'ed\'ed\'fb\'ec\'e8 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff\'ec\'e8\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'ea\'ee\'f0\'ee\'f2\'ea\'ee\'e9 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8:\b0\par
int[] numbers = \{ 1, 2, 3, 4, 5 \}; // \'cc\'e0\'f1\'f1\'e8\'e2 \'e8\'e7 5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'f1 \'e7\'e0\'e4\'e0\'ed\'ed\'fb\'ec\'e8 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff\'ec\'e8\par
\b\'c4\'ee\'f1\'f2\'f3\'ef \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec \'ec\'e0\'f1\'f1\'e8\'e2\'e0\par
\'dd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'e4\'ee\'f1\'f2\'f3\'ef\'ed\'fb \'ef\'ee \'e8\'ed\'e4\'e5\'ea\'f1\'f3, \'ed\'e0\'f7\'e8\'ed\'e0\'ff \'f1 0.\par
\'cf\'f0\'e8\'ec\'e5\'f0 \'e4\'ee\'f1\'f2\'f3\'ef\'e0 \'ea \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0\'ec:\b0\par
int[] numbers = \{ 1, 2, 3, 4, 5 \};\par
int firstElement = numbers[0]; // \'c4\'ee\'f1\'f2\'f3\'ef \'ea \'ef\'e5\'f0\'e2\'ee\'ec\'f3 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'f3 (1)\par
int secondElement = numbers[1]; // \'c4\'ee\'f1\'f2\'f3\'ef \'ea\'ee \'e2\'f2\'ee\'f0\'ee\'ec\'f3 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'f3 (2)\par
\b\'c8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'e5 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'ec\'e0\'f1\'f1\'e8\'e2\'e0\par
\'dd\'eb\'e5\'ec\'e5\'ed\'f2\'fb \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'ec\'ee\'e6\'ed\'ee \'e8\'e7\'ec\'e5\'ed\'ff\'f2\'fc, \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'ff \'e8\'ed\'e4\'e5\'ea\'f1\'fb.\par
\'cf\'f0\'e8\'ec\'e5\'f0 \'e8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'ff \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2:\b0\par
int[] numbers = \{ 1, 2, 3, 4, 5 \};\par
numbers[0] = 10; // \'c8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'e5 \'ef\'e5\'f0\'e2\'ee\'e3\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 \'ed\'e0 10\par
numbers[1] = 20; // \'c8\'e7\'ec\'e5\'ed\'e5\'ed\'e8\'e5 \'e2\'f2\'ee\'f0\'ee\'e3\'ee \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'e0 \'ed\'e0 20\par
\b\'cf\'e5\'f0\'e5\'e1\'ee\'f0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'ec\'e0\'f1\'f1\'e8\'e2\'e0\par
\'c4\'eb\'ff \'ef\'e5\'f0\'e5\'e1\'ee\'f0\'e0 \'fd\'eb\'e5\'ec\'e5\'ed\'f2\'ee\'e2 \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'ec\'ee\'e6\'ed\'ee \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc \'f6\'e8\'ea\'eb for \'e8\'eb\'e8 foreach.\par
\'cf\'f0\'e8\'ec\'e5\'f0 \'f1 \'f6\'e8\'ea\'eb\'ee\'ec for:\b0\par
int[] numbers = \{ 1, 2, 3, 4, 5 \};\par
for (int i = 0; i < numbers.Length; i++)\par
\{\par
    Console.WriteLine(numbers[i]);\par
\}\par
\b\'cf\'f0\'e8\'ec\'e5\'f0 \'f1 \'f6\'e8\'ea\'eb\'ee\'ec foreach:\b0\par
int[] numbers = \{ 1, 2, 3, 4, 5 \};\par
foreach (int number in numbers)\par
\{\par
    Console.WriteLine(number);\par
\}\b\i\f2\lang9\par
}
 